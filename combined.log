{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-03-06T13:44:55.785Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-03-06T13:44:55.790Z"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-03-12T12:02:33.653Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-03-12T12:02:33.658Z"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-03-12T14:31:11.232Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-03-12T14:31:11.237Z"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-03-12T14:31:51.864Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-03-12T14:31:51.868Z"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-03-12T14:33:36.086Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-03-12T14:33:36.090Z"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-03-12T15:05:29.780Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-03-12T15:05:29.797Z"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-03-13T03:30:00.315Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-03-13T03:30:00.323Z"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-03-13T03:33:57.425Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-03-13T03:33:57.439Z"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-03-13T03:36:07.994Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-03-13T03:36:08.007Z"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-03-13T03:40:46.885Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-03-13T03:40:46.893Z"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-03-13T03:42:08.181Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-03-13T03:42:08.190Z"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-03-13T04:03:36.228Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-03-13T04:03:36.243Z"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-03-13T04:03:42.619Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-03-13T04:03:42.628Z"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-03-13T04:05:04.071Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-03-13T04:05:04.079Z"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-03-13T06:57:59.086Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-03-13T06:57:59.097Z"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-03-13T07:00:58.015Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-03-13T07:00:58.021Z"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-03-13T07:02:36.309Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-03-13T07:02:36.314Z"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-03-13T07:11:21.927Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-03-13T07:11:21.937Z"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-03-13T07:11:47.205Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-03-13T07:11:47.210Z"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-03-13T07:14:01.135Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-03-13T07:14:01.145Z"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-03-13T07:14:24.149Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-03-13T07:14:24.161Z"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-03-13T07:16:03.440Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-03-13T07:16:03.452Z"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-03-13T07:25:41.410Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-03-13T07:25:41.417Z"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-03-13T07:28:08.564Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-03-13T07:28:08.569Z"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-03-13T07:57:17.939Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-03-13T07:57:17.945Z"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-03-13T08:02:21.428Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-03-13T08:02:21.434Z"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-03-13T08:04:11.408Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-03-13T08:04:11.415Z"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-03-13T08:07:52.141Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-03-13T08:07:52.149Z"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-03-13T08:09:48.772Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-03-13T08:09:48.784Z"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-03-13T08:10:02.817Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-03-13T08:10:02.831Z"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-03-13T08:10:11.388Z"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-03-13T08:10:12.893Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-03-13T08:10:12.903Z"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-03-13T08:10:15.577Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-03-13T08:10:15.586Z"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-03-13T08:12:54.929Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-03-13T08:12:54.935Z"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-03-13T08:55:20.918Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-03-13T08:55:20.925Z"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-03-13T10:34:46.111Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-03-13T10:34:46.118Z"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-03-13T10:44:42.917Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-03-13T10:44:42.926Z"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-03-13T10:45:21.530Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-03-13T10:45:21.542Z"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-03-13T10:45:38.948Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-03-13T10:45:38.957Z"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-03-13T10:49:16.624Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-03-13T10:49:16.632Z"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-03-13T10:49:28.690Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-03-13T10:49:28.701Z"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-03-13T10:49:58.014Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-03-13T10:49:58.026Z"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-03-13T10:53:43.644Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-03-13T10:53:43.657Z"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-03-13T10:54:10.346Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-03-13T10:54:10.353Z"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-03-13T10:54:33.590Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-03-13T10:54:33.595Z"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-03-13T10:54:52.319Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-03-13T10:54:52.329Z"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-03-13T10:59:19.558Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-03-13T10:59:19.564Z"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-03-13T11:02:03.691Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-03-13T11:02:03.707Z"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-03-13T11:03:47.862Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-03-13T11:03:47.872Z"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-03-13T11:04:28.256Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-03-13T11:04:28.263Z"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-03-13T11:04:40.405Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-03-13T11:04:40.410Z"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-03-13T11:06:36.525Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-03-13T11:06:36.535Z"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-03-13T11:08:58.531Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-03-13T11:08:58.541Z"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-03-13T11:11:09.578Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-03-13T11:11:09.592Z"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-03-13T11:12:54.002Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-03-13T11:12:54.011Z"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-03-13T11:16:18.956Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-03-13T11:16:18.966Z"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-03-13T11:29:13.416Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-03-13T11:29:13.426Z"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-03-13T11:29:17.902Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-03-13T11:29:17.910Z"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-03-13T11:30:30.026Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-03-13T11:30:30.035Z"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-03-13T11:36:09.986Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-03-13T11:36:10.004Z"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-03-13T11:36:43.153Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-03-13T11:36:43.164Z"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-03-13T11:37:15.657Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-03-13T11:37:15.664Z"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-03-13T11:40:21.396Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-03-13T11:40:21.408Z"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-03-13T11:40:36.525Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-03-13T11:40:36.537Z"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-03-13T11:41:33.768Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-03-13T11:41:33.782Z"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-03-13T11:43:38.564Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-03-13T11:43:38.573Z"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-03-13T11:46:53.949Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-03-13T11:46:53.958Z"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-03-13T11:47:24.172Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-03-13T11:47:24.184Z"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-03-13T11:49:44.264Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-03-13T11:49:44.281Z"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-03-13T11:51:04.213Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-03-13T11:51:04.223Z"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-03-13T11:55:20.229Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-03-13T11:55:20.241Z"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-03-13T11:57:08.938Z"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-03-13T11:57:47.820Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-03-13T11:57:47.827Z"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-03-13T12:01:35.440Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-03-13T12:01:35.449Z"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-03-13T12:02:37.892Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-03-13T12:02:37.901Z"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-03-13T12:03:34.075Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-03-13T12:03:34.083Z"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-03-13T12:03:44.319Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-03-13T12:03:44.328Z"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-03-13T12:04:04.901Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-03-13T12:04:04.908Z"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-03-13T12:07:04.922Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-03-13T12:07:04.935Z"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-03-13T12:07:54.929Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-03-13T12:07:54.935Z"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-03-13T12:25:22.478Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-03-13T12:25:22.483Z"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-03-13T12:28:38.923Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-03-13T12:28:38.933Z"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-03-13T12:29:56.045Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-03-13T12:29:56.051Z"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-03-13T12:33:46.673Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-03-13T12:33:46.682Z"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-03-13T12:35:24.021Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-03-13T12:35:24.028Z"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-03-13T12:36:32.823Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-03-13T12:36:32.835Z"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-03-13T12:36:36.267Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-03-13T12:36:36.281Z"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-03-13T12:37:39.699Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-03-13T12:37:39.727Z"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-03-13T12:38:45.170Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-03-13T12:38:45.177Z"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-03-13T12:41:08.146Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-03-13T12:41:08.162Z"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-03-13T12:41:15.158Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-03-13T12:41:15.166Z"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-03-13T12:43:19.356Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-03-13T12:43:19.367Z"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-03-13T12:44:49.217Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-03-13T12:44:49.225Z"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-03-13T12:45:57.180Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-03-13T12:45:57.188Z"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-03-13T12:47:00.601Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-03-13T12:47:00.608Z"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-03-13T12:49:25.306Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-03-13T12:49:25.314Z"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-03-13T12:49:56.618Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-03-13T12:49:56.626Z"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-03-13T12:50:11.883Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-03-13T12:50:11.895Z"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-03-13T12:52:17.703Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-03-13T12:52:17.710Z"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-03-13T12:55:39.204Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-03-13T12:55:39.214Z"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-03-13T12:58:13.164Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-03-13T12:58:13.172Z"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-03-13T13:00:40.581Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-03-13T13:00:40.589Z"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-03-13T13:01:28.694Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-03-13T13:01:28.705Z"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-03-13T13:02:28.819Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-03-13T13:02:28.830Z"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-03-13T13:03:12.293Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-03-13T13:03:12.301Z"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-03-13T13:04:16.191Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-03-13T13:04:16.202Z"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-03-13T13:05:18.803Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-03-13T13:05:18.817Z"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-03-13T13:08:33.784Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-03-13T13:08:33.792Z"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-03-13T17:34:25.904Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-03-13T17:34:25.910Z"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-03-13T17:38:43.608Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-03-13T17:38:43.616Z"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-03-13T17:40:17.577Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-03-13T17:40:17.588Z"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-03-13T17:40:20.281Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-03-13T17:40:20.294Z"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-03-13T17:41:15.415Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-03-13T17:41:15.424Z"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-03-13T17:42:14.007Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-03-13T17:42:14.013Z"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-03-13T17:44:30.596Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-03-13T17:44:30.604Z"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-03-13T17:45:28.333Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-03-13T17:45:28.344Z"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-03-13T17:45:36.815Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-03-13T17:45:36.829Z"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-03-13T18:00:05.241Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-03-13T18:00:05.248Z"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-03-13T18:00:10.648Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-03-13T18:00:10.655Z"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-03-13T18:01:09.093Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-03-13T18:01:09.106Z"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-03-13T18:02:44.096Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-03-13T18:02:44.105Z"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-03-13T18:02:59.561Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-03-13T18:02:59.566Z"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-03-13T18:03:27.781Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-03-13T18:03:27.791Z"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-03-13T18:13:39.523Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-03-13T18:13:39.531Z"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-03-13T18:17:11.775Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-03-13T18:17:11.785Z"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-03-13T18:23:03.930Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-03-13T18:23:03.938Z"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-03-13T18:25:30.808Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-03-13T18:25:30.820Z"}
{"error":"Data truncated for column 'payment_status' at row 1","level":"error","message":"Booking creation error:","stack":"Error\n    at Query.run (D:\\KHACHSAN3TL\\node_modules\\sequelize\\lib\\dialects\\mysql\\query.js:52:25)\n    at D:\\KHACHSAN3TL\\node_modules\\sequelize\\lib\\sequelize.js:315:28\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at async MySQLQueryInterface.insert (D:\\KHACHSAN3TL\\node_modules\\sequelize\\lib\\dialects\\abstract\\query-interface.js:308:21)\n    at async model.save (D:\\KHACHSAN3TL\\node_modules\\sequelize\\lib\\model.js:2490:35)\n    at async Booking.create (D:\\KHACHSAN3TL\\node_modules\\sequelize\\lib\\model.js:1362:12)\n    at async exports.createBooking (D:\\KHACHSAN3TL\\src\\controllers\\booking.controller.js:137:25)","timestamp":"2025-03-13T18:25:57.317Z"}
{"error":"Data truncated for column 'payment_status' at row 1","level":"error","message":"Booking creation error:","stack":"Error\n    at Query.run (D:\\KHACHSAN3TL\\node_modules\\sequelize\\lib\\dialects\\mysql\\query.js:52:25)\n    at D:\\KHACHSAN3TL\\node_modules\\sequelize\\lib\\sequelize.js:315:28\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at async MySQLQueryInterface.insert (D:\\KHACHSAN3TL\\node_modules\\sequelize\\lib\\dialects\\abstract\\query-interface.js:308:21)\n    at async model.save (D:\\KHACHSAN3TL\\node_modules\\sequelize\\lib\\model.js:2490:35)\n    at async Booking.create (D:\\KHACHSAN3TL\\node_modules\\sequelize\\lib\\model.js:1362:12)\n    at async exports.createBooking (D:\\KHACHSAN3TL\\src\\controllers\\booking.controller.js:137:25)","timestamp":"2025-03-13T18:26:52.884Z"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-03-13T18:29:40.098Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-03-13T18:29:40.108Z"}
{"error":"Data truncated for column 'payment_status' at row 1","level":"error","message":"Booking creation error:","stack":"Error\n    at Query.run (D:\\KHACHSAN3TL\\node_modules\\sequelize\\lib\\dialects\\mysql\\query.js:52:25)\n    at D:\\KHACHSAN3TL\\node_modules\\sequelize\\lib\\sequelize.js:315:28\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at async MySQLQueryInterface.insert (D:\\KHACHSAN3TL\\node_modules\\sequelize\\lib\\dialects\\abstract\\query-interface.js:308:21)\n    at async model.save (D:\\KHACHSAN3TL\\node_modules\\sequelize\\lib\\model.js:2490:35)\n    at async Booking.create (D:\\KHACHSAN3TL\\node_modules\\sequelize\\lib\\model.js:1362:12)\n    at async exports.createBooking (D:\\KHACHSAN3TL\\src\\controllers\\booking.controller.js:149:25)","timestamp":"2025-03-13T18:30:27.655Z"}
{"error":"Data truncated for column 'payment_status' at row 1","level":"error","message":"Booking creation error:","stack":"Error\n    at Query.run (D:\\KHACHSAN3TL\\node_modules\\sequelize\\lib\\dialects\\mysql\\query.js:52:25)\n    at D:\\KHACHSAN3TL\\node_modules\\sequelize\\lib\\sequelize.js:315:28\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at async MySQLQueryInterface.insert (D:\\KHACHSAN3TL\\node_modules\\sequelize\\lib\\dialects\\abstract\\query-interface.js:308:21)\n    at async model.save (D:\\KHACHSAN3TL\\node_modules\\sequelize\\lib\\model.js:2490:35)\n    at async Booking.create (D:\\KHACHSAN3TL\\node_modules\\sequelize\\lib\\model.js:1362:12)\n    at async exports.createBooking (D:\\KHACHSAN3TL\\src\\controllers\\booking.controller.js:149:25)","timestamp":"2025-03-13T18:31:19.735Z"}
{"error":"Data truncated for column 'payment_status' at row 1","level":"error","message":"Booking creation error:","stack":"Error\n    at Query.run (D:\\KHACHSAN3TL\\node_modules\\sequelize\\lib\\dialects\\mysql\\query.js:52:25)\n    at D:\\KHACHSAN3TL\\node_modules\\sequelize\\lib\\sequelize.js:315:28\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at async MySQLQueryInterface.insert (D:\\KHACHSAN3TL\\node_modules\\sequelize\\lib\\dialects\\abstract\\query-interface.js:308:21)\n    at async model.save (D:\\KHACHSAN3TL\\node_modules\\sequelize\\lib\\model.js:2490:35)\n    at async Booking.create (D:\\KHACHSAN3TL\\node_modules\\sequelize\\lib\\model.js:1362:12)\n    at async exports.createBooking (D:\\KHACHSAN3TL\\src\\controllers\\booking.controller.js:149:25)","timestamp":"2025-03-13T18:32:01.596Z"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-03-13T18:35:21.713Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-03-13T18:35:21.721Z"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-03-13T18:35:29.221Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-03-13T18:35:29.229Z"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-03-13T18:35:35.003Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-03-13T18:35:35.010Z"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-03-13T18:35:39.386Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-03-13T18:35:39.394Z"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-03-13T18:40:21.407Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-03-13T18:40:21.415Z"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-03-13T18:40:58.967Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-03-13T18:40:58.975Z"}
{"error":"Data truncated for column 'payment_status' at row 1","level":"error","message":"Booking creation error:","stack":"Error\n    at Query.run (D:\\KHACHSAN3TL\\node_modules\\sequelize\\lib\\dialects\\mysql\\query.js:52:25)\n    at D:\\KHACHSAN3TL\\node_modules\\sequelize\\lib\\sequelize.js:315:28\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at async MySQLQueryInterface.insert (D:\\KHACHSAN3TL\\node_modules\\sequelize\\lib\\dialects\\abstract\\query-interface.js:308:21)\n    at async model.save (D:\\KHACHSAN3TL\\node_modules\\sequelize\\lib\\model.js:2490:35)\n    at async Booking.create (D:\\KHACHSAN3TL\\node_modules\\sequelize\\lib\\model.js:1362:12)\n    at async exports.createBooking (D:\\KHACHSAN3TL\\src\\controllers\\booking.controller.js:149:25)","timestamp":"2025-03-13T18:41:26.363Z"}
{"error":"Data truncated for column 'payment_status' at row 1","level":"error","message":"Booking creation error:","stack":"Error\n    at Query.run (D:\\KHACHSAN3TL\\node_modules\\sequelize\\lib\\dialects\\mysql\\query.js:52:25)\n    at D:\\KHACHSAN3TL\\node_modules\\sequelize\\lib\\sequelize.js:315:28\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at async MySQLQueryInterface.insert (D:\\KHACHSAN3TL\\node_modules\\sequelize\\lib\\dialects\\abstract\\query-interface.js:308:21)\n    at async model.save (D:\\KHACHSAN3TL\\node_modules\\sequelize\\lib\\model.js:2490:35)\n    at async Booking.create (D:\\KHACHSAN3TL\\node_modules\\sequelize\\lib\\model.js:1362:12)\n    at async exports.createBooking (D:\\KHACHSAN3TL\\src\\controllers\\booking.controller.js:149:25)","timestamp":"2025-03-13T18:43:39.820Z"}
{"error":"Data truncated for column 'payment_status' at row 1","level":"error","message":"Booking creation error:","stack":"Error\n    at Query.run (D:\\KHACHSAN3TL\\node_modules\\sequelize\\lib\\dialects\\mysql\\query.js:52:25)\n    at D:\\KHACHSAN3TL\\node_modules\\sequelize\\lib\\sequelize.js:315:28\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at async MySQLQueryInterface.insert (D:\\KHACHSAN3TL\\node_modules\\sequelize\\lib\\dialects\\abstract\\query-interface.js:308:21)\n    at async model.save (D:\\KHACHSAN3TL\\node_modules\\sequelize\\lib\\model.js:2490:35)\n    at async Booking.create (D:\\KHACHSAN3TL\\node_modules\\sequelize\\lib\\model.js:1362:12)\n    at async exports.createBooking (D:\\KHACHSAN3TL\\src\\controllers\\booking.controller.js:149:25)","timestamp":"2025-03-13T18:43:42.461Z"}
{"error":"Data truncated for column 'payment_status' at row 1","level":"error","message":"Booking creation error:","stack":"Error\n    at Query.run (D:\\KHACHSAN3TL\\node_modules\\sequelize\\lib\\dialects\\mysql\\query.js:52:25)\n    at D:\\KHACHSAN3TL\\node_modules\\sequelize\\lib\\sequelize.js:315:28\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at async MySQLQueryInterface.insert (D:\\KHACHSAN3TL\\node_modules\\sequelize\\lib\\dialects\\abstract\\query-interface.js:308:21)\n    at async model.save (D:\\KHACHSAN3TL\\node_modules\\sequelize\\lib\\model.js:2490:35)\n    at async Booking.create (D:\\KHACHSAN3TL\\node_modules\\sequelize\\lib\\model.js:1362:12)\n    at async exports.createBooking (D:\\KHACHSAN3TL\\src\\controllers\\booking.controller.js:149:25)","timestamp":"2025-03-13T18:44:19.633Z"}
{"error":"Data truncated for column 'payment_status' at row 1","level":"error","message":"Booking creation error:","stack":"Error\n    at Query.run (D:\\KHACHSAN3TL\\node_modules\\sequelize\\lib\\dialects\\mysql\\query.js:52:25)\n    at D:\\KHACHSAN3TL\\node_modules\\sequelize\\lib\\sequelize.js:315:28\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at async MySQLQueryInterface.insert (D:\\KHACHSAN3TL\\node_modules\\sequelize\\lib\\dialects\\abstract\\query-interface.js:308:21)\n    at async model.save (D:\\KHACHSAN3TL\\node_modules\\sequelize\\lib\\model.js:2490:35)\n    at async Booking.create (D:\\KHACHSAN3TL\\node_modules\\sequelize\\lib\\model.js:1362:12)\n    at async exports.createBooking (D:\\KHACHSAN3TL\\src\\controllers\\booking.controller.js:149:25)","timestamp":"2025-03-13T18:47:19.700Z"}
{"error":"Data truncated for column 'payment_status' at row 1","level":"error","message":"Booking creation error:","stack":"Error\n    at Query.run (D:\\KHACHSAN3TL\\node_modules\\sequelize\\lib\\dialects\\mysql\\query.js:52:25)\n    at D:\\KHACHSAN3TL\\node_modules\\sequelize\\lib\\sequelize.js:315:28\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at async MySQLQueryInterface.insert (D:\\KHACHSAN3TL\\node_modules\\sequelize\\lib\\dialects\\abstract\\query-interface.js:308:21)\n    at async model.save (D:\\KHACHSAN3TL\\node_modules\\sequelize\\lib\\model.js:2490:35)\n    at async Booking.create (D:\\KHACHSAN3TL\\node_modules\\sequelize\\lib\\model.js:1362:12)\n    at async exports.createBooking (D:\\KHACHSAN3TL\\src\\controllers\\booking.controller.js:149:25)","timestamp":"2025-03-13T18:47:36.266Z"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-03-13T18:54:32.936Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-03-13T18:54:32.948Z"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-03-13T18:55:11.987Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-03-13T18:55:11.994Z"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-03-13T18:57:09.656Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-03-13T18:57:09.665Z"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-03-13T18:59:10.303Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-03-13T18:59:10.308Z"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-03-13T18:59:24.785Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-03-13T18:59:24.792Z"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-03-13T18:59:59.101Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-03-13T18:59:59.110Z"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-03-14T05:12:13.216Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-03-14T05:12:13.225Z"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-03-14T05:26:30.658Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-03-14T05:26:30.668Z"}
{"error":"Data truncated for column 'payment_status' at row 1","level":"error","message":"Booking creation error:","stack":"Error\n    at Query.run (D:\\KHACHSAN3TL\\node_modules\\sequelize\\lib\\dialects\\mysql\\query.js:52:25)\n    at D:\\KHACHSAN3TL\\node_modules\\sequelize\\lib\\sequelize.js:315:28\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at async MySQLQueryInterface.insert (D:\\KHACHSAN3TL\\node_modules\\sequelize\\lib\\dialects\\abstract\\query-interface.js:308:21)\n    at async model.save (D:\\KHACHSAN3TL\\node_modules\\sequelize\\lib\\model.js:2490:35)\n    at async Booking.create (D:\\KHACHSAN3TL\\node_modules\\sequelize\\lib\\model.js:1362:12)\n    at async exports.createBooking (D:\\KHACHSAN3TL\\src\\controllers\\booking.controller.js:150:25)","timestamp":"2025-03-14T05:27:19.540Z"}
{"error":"Data truncated for column 'payment_status' at row 1","level":"error","message":"Booking creation error:","stack":"Error\n    at Query.run (D:\\KHACHSAN3TL\\node_modules\\sequelize\\lib\\dialects\\mysql\\query.js:52:25)\n    at D:\\KHACHSAN3TL\\node_modules\\sequelize\\lib\\sequelize.js:315:28\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at async MySQLQueryInterface.insert (D:\\KHACHSAN3TL\\node_modules\\sequelize\\lib\\dialects\\abstract\\query-interface.js:308:21)\n    at async model.save (D:\\KHACHSAN3TL\\node_modules\\sequelize\\lib\\model.js:2490:35)\n    at async Booking.create (D:\\KHACHSAN3TL\\node_modules\\sequelize\\lib\\model.js:1362:12)\n    at async exports.createBooking (D:\\KHACHSAN3TL\\src\\controllers\\booking.controller.js:150:25)","timestamp":"2025-03-14T05:29:31.342Z"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-03-14T05:35:29.698Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-03-14T05:35:29.706Z"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-03-14T05:38:57.060Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-03-14T05:38:57.071Z"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-03-14T05:41:46.083Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-03-14T05:41:46.089Z"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-03-14T05:44:30.778Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-03-14T05:44:30.782Z"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-03-14T05:47:52.441Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-03-14T05:47:52.449Z"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-03-14T05:49:38.690Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-03-14T05:49:38.701Z"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-03-14T05:51:40.503Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-03-14T05:51:40.512Z"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-03-14T05:57:21.920Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-03-14T05:57:21.929Z"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-03-14T06:00:54.497Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-03-14T06:00:54.506Z"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-03-14T06:02:19.429Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-03-14T06:02:19.435Z"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-03-14T06:06:56.136Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-03-14T06:06:56.143Z"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-03-14T06:09:51.039Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-03-14T06:09:51.051Z"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-03-14T06:10:04.163Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-03-14T06:10:04.172Z"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-03-14T06:11:34.112Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-03-14T06:11:34.127Z"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-03-14T06:11:46.134Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-03-14T06:11:46.148Z"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-03-14T06:11:57.757Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-03-14T06:11:57.765Z"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-03-14T06:13:40.964Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-03-14T06:13:40.979Z"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-03-14T06:13:54.423Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-03-14T06:13:54.428Z"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-03-14T06:13:58.278Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-03-14T06:13:58.285Z"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-03-14T06:14:22.108Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-03-14T06:14:22.122Z"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-03-14T06:22:50.269Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-03-14T06:22:50.276Z"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-03-14T06:24:40.491Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-03-14T06:24:40.500Z"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-03-14T06:24:53.718Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-03-14T06:24:53.726Z"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-03-14T06:25:01.282Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-03-14T06:25:01.292Z"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-03-14T06:26:42.387Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-03-14T06:26:42.396Z"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-03-14T06:26:52.906Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-03-14T06:26:52.913Z"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-03-14T06:27:01.548Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-03-14T06:27:01.556Z"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-03-14T06:27:56.155Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-03-14T06:27:56.164Z"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-03-14T06:28:03.900Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-03-14T06:28:03.907Z"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-03-14T06:29:01.277Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-03-14T06:29:01.287Z"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-03-14T06:30:24.981Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-03-14T06:30:24.992Z"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-03-14T06:30:32.233Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-03-14T06:30:32.241Z"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-03-14T06:31:43.104Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-03-14T06:31:43.111Z"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-03-14T07:09:22.306Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-03-14T07:09:22.311Z"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-03-14T07:16:37.796Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-03-14T07:16:37.808Z"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-03-14T07:16:47.493Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-03-14T07:16:47.498Z"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-03-14T07:19:20.351Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-03-14T07:19:20.366Z"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-03-14T07:19:29.105Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-03-14T07:19:29.115Z"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-03-14T07:19:46.123Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-03-14T07:19:46.136Z"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-03-14T07:22:57.019Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-03-14T07:22:57.029Z"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-03-14T07:23:05.340Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-03-14T07:23:05.350Z"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-03-14T07:24:37.026Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-03-14T07:24:37.037Z"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-03-14T07:26:10.709Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-03-14T07:26:10.717Z"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-03-14T07:28:28.811Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-03-14T07:28:28.822Z"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-03-14T07:31:06.203Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-03-14T07:31:06.212Z"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-03-14T07:36:38.113Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-03-14T07:36:38.124Z"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-03-14T07:40:41.752Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-03-14T07:40:41.761Z"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-03-14T07:45:42.455Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-03-14T07:45:42.464Z"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-03-14T07:48:57.566Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-03-14T07:48:57.576Z"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-03-14T07:49:10.605Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-03-14T07:49:10.610Z"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-03-14T07:49:21.028Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-03-14T07:49:21.038Z"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-03-14T07:53:08.207Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-03-14T07:53:08.215Z"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-03-14T07:55:42.214Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-03-14T07:55:42.219Z"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-03-14T07:56:14.513Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-03-14T07:56:14.518Z"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-03-14T07:56:15.845Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-03-14T07:56:15.852Z"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-03-14T07:56:20.254Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-03-14T07:56:20.262Z"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-03-14T07:56:54.044Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-03-14T07:56:54.055Z"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-03-14T07:56:57.936Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-03-14T07:56:57.945Z"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-03-14T07:57:40.515Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-03-14T07:57:40.525Z"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-03-14T07:58:58.345Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-03-14T07:58:58.356Z"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-03-14T07:59:23.709Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-03-14T07:59:23.718Z"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-03-14T08:01:05.036Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-03-14T08:01:05.044Z"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-03-14T08:33:43.766Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-03-14T08:33:43.823Z"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-03-14T08:34:13.343Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-03-14T08:34:13.357Z"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-03-14T08:49:35.374Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-03-14T08:49:35.381Z"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-03-14T08:50:02.089Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-03-14T08:50:02.094Z"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-03-14T08:53:32.179Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-03-14T08:53:32.186Z"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-03-14T08:53:35.397Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-03-14T08:53:35.404Z"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-03-14T08:55:27.304Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-03-14T08:55:27.315Z"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-03-14T11:28:32.416Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-03-14T11:28:32.424Z"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-03-17T00:43:33.811Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-03-17T00:43:33.820Z"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-03-17T00:45:52.514Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-03-17T00:45:52.519Z"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-03-17T00:56:58.227Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-03-17T00:56:58.237Z"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-03-17T00:59:35.132Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-03-17T00:59:35.141Z"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-03-17T01:00:11.838Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-03-17T01:00:11.845Z"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-03-17T01:02:33.194Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-03-17T01:02:33.203Z"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-03-17T01:02:48.598Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-03-17T01:02:48.609Z"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-03-17T01:06:14.309Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-03-17T01:06:14.320Z"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-03-17T01:08:21.687Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-03-17T01:08:21.697Z"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-03-17T01:08:30.344Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-03-17T01:08:30.357Z"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-03-17T01:11:47.996Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-03-17T01:11:48.008Z"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-03-17T01:12:04.469Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-03-17T01:12:04.480Z"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-03-17T01:12:13.753Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-03-17T01:12:13.763Z"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-03-17T01:16:29.400Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-03-17T01:16:29.410Z"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-03-17T06:24:12.862Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-03-17T06:24:12.871Z"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-03-17T06:38:13.952Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-03-17T06:38:13.957Z"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-03-17T06:41:36.544Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-03-17T06:41:36.552Z"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-03-17T06:41:47.039Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-03-17T06:41:47.046Z"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-03-17T06:42:22.026Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-03-17T06:42:22.041Z"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-03-17T06:46:11.440Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-03-17T06:46:11.476Z"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-03-17T06:50:09.406Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-03-17T06:50:09.415Z"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-03-17T06:52:31.504Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-03-17T06:52:31.510Z"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-03-17T06:58:49.753Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-03-17T06:58:49.760Z"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-03-17T07:08:23.913Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-03-17T07:08:23.921Z"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-03-17T07:10:52.066Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-03-17T07:10:52.075Z"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-03-17T07:11:20.895Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-03-17T07:11:20.905Z"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-03-17T07:13:21.635Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-03-17T07:13:21.643Z"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-03-17T07:29:23.086Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-03-17T07:29:23.093Z"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-03-17T07:32:46.305Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-03-17T07:32:46.315Z"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-03-17T07:33:38.525Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-03-17T07:33:38.534Z"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-03-17T10:48:19.261Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-03-17T10:48:19.266Z"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-03-17T10:50:11.330Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-03-17T10:50:11.341Z"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-03-17T10:55:46.818Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-03-17T10:55:46.825Z"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-03-17T10:57:46.706Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-03-17T10:57:46.717Z"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-03-17T11:00:17.972Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-03-17T11:00:17.979Z"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-03-17T11:03:21.021Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-03-17T11:03:21.029Z"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-03-17T11:04:09.784Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-03-17T11:04:09.791Z"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-03-17T12:50:48.624Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-03-17T12:50:48.630Z"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-03-17T13:24:58.779Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-03-17T13:24:58.786Z"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-03-17T13:31:19.946Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-03-17T13:31:19.959Z"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-03-17T13:32:41.514Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-03-17T13:32:41.531Z"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-03-17T15:35:21.826Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-03-17T15:35:21.834Z"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-03-17T15:38:17.823Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-03-17T15:38:17.832Z"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-03-17T15:38:25.433Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-03-17T15:38:25.443Z"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-03-17T15:39:19.152Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-03-17T15:39:19.157Z"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-03-17T15:57:07.805Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-03-17T15:57:07.819Z"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-03-17T15:57:12.216Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-03-17T15:57:12.230Z"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-03-17T15:57:22.104Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-03-17T15:57:22.120Z"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-03-17T15:57:26.420Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-03-17T15:57:26.432Z"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-03-17T15:57:39.767Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-03-17T15:57:39.778Z"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-03-17T15:57:49.178Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-03-17T15:57:49.189Z"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-03-17T15:58:02.778Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-03-17T15:58:02.785Z"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-03-17T16:00:03.255Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-03-17T16:00:03.281Z"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-03-17T16:00:10.328Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-03-17T16:00:10.338Z"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-03-17T16:18:02.277Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-03-17T16:18:02.288Z"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-03-17T16:22:08.228Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-03-17T16:22:08.243Z"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-03-17T16:22:51.532Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-03-17T16:22:51.545Z"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-03-17T16:23:00.632Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-03-17T16:23:00.644Z"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-03-17T16:27:56.700Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-03-17T16:27:56.715Z"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-03-17T16:28:03.914Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-03-17T16:28:03.933Z"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-03-17T16:38:16.002Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-03-17T16:38:16.018Z"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-03-17T16:38:28.453Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-03-17T16:38:28.466Z"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-03-18T07:28:48.865Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-03-18T07:28:48.873Z"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-03-18T07:47:36.487Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-03-18T07:47:36.494Z"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-03-18T07:47:44.748Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-03-18T07:47:44.760Z"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-03-18T07:50:44.168Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-03-18T07:50:44.177Z"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-03-18T07:54:23.501Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-03-18T07:54:23.518Z"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-03-18T07:54:38.881Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-03-18T07:54:38.889Z"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-03-18T07:56:05.494Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-03-18T07:56:05.503Z"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-03-18T07:56:16.455Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-03-18T07:56:16.465Z"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-03-18T10:04:04.794Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-03-18T10:04:04.801Z"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-03-18T10:09:43.157Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-03-18T10:09:43.181Z"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-03-18T10:09:50.879Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-03-18T10:09:50.886Z"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-03-18T10:10:12.252Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-03-18T10:10:12.263Z"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-03-18T10:10:31.198Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-03-18T10:10:31.205Z"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-03-18T10:13:15.724Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-03-18T10:13:15.735Z"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-03-18T10:14:40.743Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-03-18T10:14:40.751Z"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-03-18T10:16:55.762Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-03-18T10:16:55.770Z"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-03-18T10:19:17.024Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-03-18T10:19:17.033Z"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-03-18T10:19:24.945Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-03-18T10:19:24.956Z"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-03-18T10:19:30.188Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-03-18T10:19:30.198Z"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-03-18T10:19:35.728Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-03-18T10:19:35.740Z"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-03-18T10:21:14.214Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-03-18T10:21:14.242Z"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-03-18T10:21:16.667Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-03-18T10:21:16.677Z"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-03-18T10:21:25.048Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-03-18T10:21:25.055Z"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-03-18T10:37:07.051Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-03-18T10:37:07.061Z"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-03-18T10:44:15.084Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-03-18T10:44:15.093Z"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-03-18T10:45:42.766Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-03-18T10:45:42.773Z"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-03-18T10:46:00.619Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-03-18T10:46:00.628Z"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-03-18T10:47:40.388Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-03-18T10:47:40.398Z"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-03-18T10:47:47.596Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-03-18T10:47:47.610Z"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-03-18T10:49:29.588Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-03-18T10:49:29.598Z"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-03-18T10:52:18.778Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-03-18T10:52:18.787Z"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-03-18T10:53:58.421Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-03-18T10:53:58.430Z"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-03-18T11:00:45.272Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-03-18T11:00:45.318Z"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-03-18T11:00:51.284Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-03-18T11:00:51.295Z"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-03-18T11:03:55.397Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-03-18T11:03:55.406Z"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-03-18T11:09:36.675Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-03-18T11:09:36.685Z"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-03-18T11:24:56.751Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-03-18T11:24:56.758Z"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-03-18T11:29:06.157Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-03-18T11:29:06.168Z"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-03-18T11:29:16.045Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-03-18T11:29:16.052Z"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-03-18T11:40:39.376Z"}
{"level":"error","message":"Unable to connect to the database: Incorrect datetime value: '0000-00-00 00:00:00' for column 'createdAt' at row 1","name":"SequelizeDatabaseError","original":{"code":"ER_TRUNCATED_WRONG_VALUE","errno":1292,"sql":"ALTER TABLE `Users` CHANGE `phone` `phone` VARCHAR(255);","sqlMessage":"Incorrect datetime value: '0000-00-00 00:00:00' for column 'createdAt' at row 1","sqlState":"22007"},"parameters":{},"parent":{"code":"ER_TRUNCATED_WRONG_VALUE","errno":1292,"sql":"ALTER TABLE `Users` CHANGE `phone` `phone` VARCHAR(255);","sqlMessage":"Incorrect datetime value: '0000-00-00 00:00:00' for column 'createdAt' at row 1","sqlState":"22007"},"sql":"ALTER TABLE `Users` CHANGE `phone` `phone` VARCHAR(255);","stack":"Error\n    at Query.run (D:\\KHACHSAN3TL\\node_modules\\sequelize\\lib\\dialects\\mysql\\query.js:52:25)\n    at D:\\KHACHSAN3TL\\node_modules\\sequelize\\lib\\sequelize.js:315:28\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at async User.sync (D:\\KHACHSAN3TL\\node_modules\\sequelize\\lib\\model.js:984:11)\n    at async Sequelize.sync (D:\\KHACHSAN3TL\\node_modules\\sequelize\\lib\\sequelize.js:377:9)\n    at async startServer (D:\\KHACHSAN3TL\\server.js:16:13)","timestamp":"2025-03-18T11:40:39.799Z"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-03-18T11:41:03.699Z"}
{"level":"error","message":"Unable to connect to the database: Incorrect datetime value: '0000-00-00 00:00:00' for column 'createdAt' at row 1","name":"SequelizeDatabaseError","original":{"code":"ER_TRUNCATED_WRONG_VALUE","errno":1292,"sql":"ALTER TABLE `Users` CHANGE `phone` `phone` VARCHAR(255);","sqlMessage":"Incorrect datetime value: '0000-00-00 00:00:00' for column 'createdAt' at row 1","sqlState":"22007"},"parameters":{},"parent":{"code":"ER_TRUNCATED_WRONG_VALUE","errno":1292,"sql":"ALTER TABLE `Users` CHANGE `phone` `phone` VARCHAR(255);","sqlMessage":"Incorrect datetime value: '0000-00-00 00:00:00' for column 'createdAt' at row 1","sqlState":"22007"},"sql":"ALTER TABLE `Users` CHANGE `phone` `phone` VARCHAR(255);","stack":"Error\n    at Query.run (D:\\KHACHSAN3TL\\node_modules\\sequelize\\lib\\dialects\\mysql\\query.js:52:25)\n    at D:\\KHACHSAN3TL\\node_modules\\sequelize\\lib\\sequelize.js:315:28\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at async User.sync (D:\\KHACHSAN3TL\\node_modules\\sequelize\\lib\\model.js:984:11)\n    at async Sequelize.sync (D:\\KHACHSAN3TL\\node_modules\\sequelize\\lib\\sequelize.js:377:9)\n    at async startServer (D:\\KHACHSAN3TL\\server.js:16:13)","timestamp":"2025-03-18T11:41:03.834Z"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-03-18T11:42:30.581Z"}
{"level":"error","message":"Unable to connect to the database: Incorrect datetime value: '0000-00-00 00:00:00' for column 'createdAt' at row 1","name":"SequelizeDatabaseError","original":{"code":"ER_TRUNCATED_WRONG_VALUE","errno":1292,"sql":"ALTER TABLE `Users` CHANGE `phone` `phone` VARCHAR(255);","sqlMessage":"Incorrect datetime value: '0000-00-00 00:00:00' for column 'createdAt' at row 1","sqlState":"22007"},"parameters":{},"parent":{"code":"ER_TRUNCATED_WRONG_VALUE","errno":1292,"sql":"ALTER TABLE `Users` CHANGE `phone` `phone` VARCHAR(255);","sqlMessage":"Incorrect datetime value: '0000-00-00 00:00:00' for column 'createdAt' at row 1","sqlState":"22007"},"sql":"ALTER TABLE `Users` CHANGE `phone` `phone` VARCHAR(255);","stack":"Error\n    at Query.run (D:\\KHACHSAN3TL\\node_modules\\sequelize\\lib\\dialects\\mysql\\query.js:52:25)\n    at D:\\KHACHSAN3TL\\node_modules\\sequelize\\lib\\sequelize.js:315:28\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at async User.sync (D:\\KHACHSAN3TL\\node_modules\\sequelize\\lib\\model.js:984:11)\n    at async Sequelize.sync (D:\\KHACHSAN3TL\\node_modules\\sequelize\\lib\\sequelize.js:377:9)\n    at async startServer (D:\\KHACHSAN3TL\\server.js:16:13)","timestamp":"2025-03-18T11:42:30.876Z"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-03-18T11:42:36.493Z"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-03-18T11:42:39.220Z"}
{"level":"error","message":"Unable to connect to the database: Incorrect datetime value: '0000-00-00 00:00:00' for column 'createdAt' at row 1","name":"SequelizeDatabaseError","original":{"code":"ER_TRUNCATED_WRONG_VALUE","errno":1292,"sql":"ALTER TABLE `Users` CHANGE `phone` `phone` VARCHAR(255);","sqlMessage":"Incorrect datetime value: '0000-00-00 00:00:00' for column 'createdAt' at row 1","sqlState":"22007"},"parameters":{},"parent":{"code":"ER_TRUNCATED_WRONG_VALUE","errno":1292,"sql":"ALTER TABLE `Users` CHANGE `phone` `phone` VARCHAR(255);","sqlMessage":"Incorrect datetime value: '0000-00-00 00:00:00' for column 'createdAt' at row 1","sqlState":"22007"},"sql":"ALTER TABLE `Users` CHANGE `phone` `phone` VARCHAR(255);","stack":"Error\n    at Query.run (D:\\KHACHSAN3TL\\node_modules\\sequelize\\lib\\dialects\\mysql\\query.js:52:25)\n    at D:\\KHACHSAN3TL\\node_modules\\sequelize\\lib\\sequelize.js:315:28\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at async User.sync (D:\\KHACHSAN3TL\\node_modules\\sequelize\\lib\\model.js:984:11)\n    at async Sequelize.sync (D:\\KHACHSAN3TL\\node_modules\\sequelize\\lib\\sequelize.js:377:9)\n    at async startServer (D:\\KHACHSAN3TL\\server.js:16:13)","timestamp":"2025-03-18T11:42:39.470Z"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-03-18T11:42:49.923Z"}
{"level":"error","message":"Database sync error: Column 'user_id' cannot be NOT NULL: needed in a foreign key constraint 'reviews_ibfk_3' SET NULL","name":"SequelizeDatabaseError","original":{"code":"ER_FK_COLUMN_NOT_NULL","errno":1830,"sql":"ALTER TABLE `reviews` ADD FOREIGN KEY (`user_id`) REFERENCES `Users` (`id`) ON DELETE SET NULL ON UPDATE CASCADE;","sqlMessage":"Column 'user_id' cannot be NOT NULL: needed in a foreign key constraint 'reviews_ibfk_3' SET NULL","sqlState":"HY000"},"parameters":{},"parent":{"code":"ER_FK_COLUMN_NOT_NULL","errno":1830,"sql":"ALTER TABLE `reviews` ADD FOREIGN KEY (`user_id`) REFERENCES `Users` (`id`) ON DELETE SET NULL ON UPDATE CASCADE;","sqlMessage":"Column 'user_id' cannot be NOT NULL: needed in a foreign key constraint 'reviews_ibfk_3' SET NULL","sqlState":"HY000"},"sql":"ALTER TABLE `reviews` ADD FOREIGN KEY (`user_id`) REFERENCES `Users` (`id`) ON DELETE SET NULL ON UPDATE CASCADE;","stack":"Error\n    at Query.run (D:\\KHACHSAN3TL\\node_modules\\sequelize\\lib\\dialects\\mysql\\query.js:52:25)\n    at D:\\KHACHSAN3TL\\node_modules\\sequelize\\lib\\sequelize.js:315:28\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at async Review.sync (D:\\KHACHSAN3TL\\node_modules\\sequelize\\lib\\model.js:984:11)\n    at async Sequelize.sync (D:\\KHACHSAN3TL\\node_modules\\sequelize\\lib\\sequelize.js:377:9)\n    at async startServer (D:\\KHACHSAN3TL\\server.js:19:13)","timestamp":"2025-03-18T11:42:52.230Z"}
{"level":"info","message":"Database synchronized","timestamp":"2025-03-18T11:42:52.231Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-03-18T11:42:52.235Z"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-03-18T11:46:02.357Z"}
{"level":"error","message":"Database sync error: Column 'user_id' cannot be NOT NULL: needed in a foreign key constraint 'reviews_ibfk_3' SET NULL","name":"SequelizeDatabaseError","original":{"code":"ER_FK_COLUMN_NOT_NULL","errno":1830,"sql":"ALTER TABLE `reviews` ADD FOREIGN KEY (`user_id`) REFERENCES `Users` (`id`) ON DELETE SET NULL ON UPDATE CASCADE;","sqlMessage":"Column 'user_id' cannot be NOT NULL: needed in a foreign key constraint 'reviews_ibfk_3' SET NULL","sqlState":"HY000"},"parameters":{},"parent":{"code":"ER_FK_COLUMN_NOT_NULL","errno":1830,"sql":"ALTER TABLE `reviews` ADD FOREIGN KEY (`user_id`) REFERENCES `Users` (`id`) ON DELETE SET NULL ON UPDATE CASCADE;","sqlMessage":"Column 'user_id' cannot be NOT NULL: needed in a foreign key constraint 'reviews_ibfk_3' SET NULL","sqlState":"HY000"},"sql":"ALTER TABLE `reviews` ADD FOREIGN KEY (`user_id`) REFERENCES `Users` (`id`) ON DELETE SET NULL ON UPDATE CASCADE;","stack":"Error\n    at Query.run (D:\\KHACHSAN3TL\\node_modules\\sequelize\\lib\\dialects\\mysql\\query.js:52:25)\n    at D:\\KHACHSAN3TL\\node_modules\\sequelize\\lib\\sequelize.js:315:28\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at async Review.sync (D:\\KHACHSAN3TL\\node_modules\\sequelize\\lib\\model.js:984:11)\n    at async Sequelize.sync (D:\\KHACHSAN3TL\\node_modules\\sequelize\\lib\\sequelize.js:377:9)\n    at async startServer (D:\\KHACHSAN3TL\\server.js:19:13)","timestamp":"2025-03-18T11:46:03.842Z"}
{"level":"info","message":"Database synchronized","timestamp":"2025-03-18T11:46:03.844Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-03-18T11:46:03.850Z"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-03-18T11:56:05.765Z"}
{"level":"error","message":"Database sync error: Column 'user_id' cannot be NOT NULL: needed in a foreign key constraint 'reviews_ibfk_3' SET NULL","name":"SequelizeDatabaseError","original":{"code":"ER_FK_COLUMN_NOT_NULL","errno":1830,"sql":"ALTER TABLE `reviews` ADD FOREIGN KEY (`user_id`) REFERENCES `Users` (`id`) ON DELETE SET NULL ON UPDATE CASCADE;","sqlMessage":"Column 'user_id' cannot be NOT NULL: needed in a foreign key constraint 'reviews_ibfk_3' SET NULL","sqlState":"HY000"},"parameters":{},"parent":{"code":"ER_FK_COLUMN_NOT_NULL","errno":1830,"sql":"ALTER TABLE `reviews` ADD FOREIGN KEY (`user_id`) REFERENCES `Users` (`id`) ON DELETE SET NULL ON UPDATE CASCADE;","sqlMessage":"Column 'user_id' cannot be NOT NULL: needed in a foreign key constraint 'reviews_ibfk_3' SET NULL","sqlState":"HY000"},"sql":"ALTER TABLE `reviews` ADD FOREIGN KEY (`user_id`) REFERENCES `Users` (`id`) ON DELETE SET NULL ON UPDATE CASCADE;","stack":"Error\n    at Query.run (D:\\KHACHSAN3TL\\node_modules\\sequelize\\lib\\dialects\\mysql\\query.js:52:25)\n    at D:\\KHACHSAN3TL\\node_modules\\sequelize\\lib\\sequelize.js:315:28\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at async Review.sync (D:\\KHACHSAN3TL\\node_modules\\sequelize\\lib\\model.js:984:11)\n    at async Sequelize.sync (D:\\KHACHSAN3TL\\node_modules\\sequelize\\lib\\sequelize.js:377:9)\n    at async startServer (D:\\KHACHSAN3TL\\server.js:19:13)","timestamp":"2025-03-18T11:56:07.474Z"}
{"level":"info","message":"Database synchronized","timestamp":"2025-03-18T11:56:07.476Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-03-18T11:56:07.483Z"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-03-18T12:00:21.294Z"}
{"level":"error","message":"Database sync error: Column 'user_id' cannot be NOT NULL: needed in a foreign key constraint 'reviews_ibfk_3' SET NULL","name":"SequelizeDatabaseError","original":{"code":"ER_FK_COLUMN_NOT_NULL","errno":1830,"sql":"ALTER TABLE `reviews` ADD FOREIGN KEY (`user_id`) REFERENCES `Users` (`id`) ON DELETE SET NULL ON UPDATE CASCADE;","sqlMessage":"Column 'user_id' cannot be NOT NULL: needed in a foreign key constraint 'reviews_ibfk_3' SET NULL","sqlState":"HY000"},"parameters":{},"parent":{"code":"ER_FK_COLUMN_NOT_NULL","errno":1830,"sql":"ALTER TABLE `reviews` ADD FOREIGN KEY (`user_id`) REFERENCES `Users` (`id`) ON DELETE SET NULL ON UPDATE CASCADE;","sqlMessage":"Column 'user_id' cannot be NOT NULL: needed in a foreign key constraint 'reviews_ibfk_3' SET NULL","sqlState":"HY000"},"sql":"ALTER TABLE `reviews` ADD FOREIGN KEY (`user_id`) REFERENCES `Users` (`id`) ON DELETE SET NULL ON UPDATE CASCADE;","stack":"Error\n    at Query.run (D:\\KHACHSAN3TL\\node_modules\\sequelize\\lib\\dialects\\mysql\\query.js:52:25)\n    at D:\\KHACHSAN3TL\\node_modules\\sequelize\\lib\\sequelize.js:315:28\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at async Review.sync (D:\\KHACHSAN3TL\\node_modules\\sequelize\\lib\\model.js:984:11)\n    at async Sequelize.sync (D:\\KHACHSAN3TL\\node_modules\\sequelize\\lib\\sequelize.js:377:9)\n    at async startServer (D:\\KHACHSAN3TL\\server.js:19:13)","timestamp":"2025-03-18T12:00:22.878Z"}
{"level":"info","message":"Database synchronized","timestamp":"2025-03-18T12:00:22.880Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-03-18T12:00:22.885Z"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-03-18T12:00:26.827Z"}
{"level":"error","message":"Database sync error: Column 'user_id' cannot be NOT NULL: needed in a foreign key constraint 'reviews_ibfk_3' SET NULL","name":"SequelizeDatabaseError","original":{"code":"ER_FK_COLUMN_NOT_NULL","errno":1830,"sql":"ALTER TABLE `reviews` ADD FOREIGN KEY (`user_id`) REFERENCES `users` (`id`) ON DELETE SET NULL ON UPDATE CASCADE;","sqlMessage":"Column 'user_id' cannot be NOT NULL: needed in a foreign key constraint 'reviews_ibfk_3' SET NULL","sqlState":"HY000"},"parameters":{},"parent":{"code":"ER_FK_COLUMN_NOT_NULL","errno":1830,"sql":"ALTER TABLE `reviews` ADD FOREIGN KEY (`user_id`) REFERENCES `users` (`id`) ON DELETE SET NULL ON UPDATE CASCADE;","sqlMessage":"Column 'user_id' cannot be NOT NULL: needed in a foreign key constraint 'reviews_ibfk_3' SET NULL","sqlState":"HY000"},"sql":"ALTER TABLE `reviews` ADD FOREIGN KEY (`user_id`) REFERENCES `users` (`id`) ON DELETE SET NULL ON UPDATE CASCADE;","stack":"Error\n    at Query.run (D:\\KHACHSAN3TL\\node_modules\\sequelize\\lib\\dialects\\mysql\\query.js:52:25)\n    at D:\\KHACHSAN3TL\\node_modules\\sequelize\\lib\\sequelize.js:315:28\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at async Review.sync (D:\\KHACHSAN3TL\\node_modules\\sequelize\\lib\\model.js:984:11)\n    at async Sequelize.sync (D:\\KHACHSAN3TL\\node_modules\\sequelize\\lib\\sequelize.js:377:9)\n    at async startServer (D:\\KHACHSAN3TL\\server.js:19:13)","timestamp":"2025-03-18T12:00:28.159Z"}
{"level":"info","message":"Database synchronized","timestamp":"2025-03-18T12:00:28.161Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-03-18T12:00:28.166Z"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-03-18T12:04:58.033Z"}
{"level":"error","message":"Database sync error: Column 'user_id' cannot be NOT NULL: needed in a foreign key constraint 'reviews_ibfk_3' SET NULL","name":"SequelizeDatabaseError","original":{"code":"ER_FK_COLUMN_NOT_NULL","errno":1830,"sql":"ALTER TABLE `reviews` ADD FOREIGN KEY (`user_id`) REFERENCES `users` (`id`) ON DELETE SET NULL ON UPDATE CASCADE;","sqlMessage":"Column 'user_id' cannot be NOT NULL: needed in a foreign key constraint 'reviews_ibfk_3' SET NULL","sqlState":"HY000"},"parameters":{},"parent":{"code":"ER_FK_COLUMN_NOT_NULL","errno":1830,"sql":"ALTER TABLE `reviews` ADD FOREIGN KEY (`user_id`) REFERENCES `users` (`id`) ON DELETE SET NULL ON UPDATE CASCADE;","sqlMessage":"Column 'user_id' cannot be NOT NULL: needed in a foreign key constraint 'reviews_ibfk_3' SET NULL","sqlState":"HY000"},"sql":"ALTER TABLE `reviews` ADD FOREIGN KEY (`user_id`) REFERENCES `users` (`id`) ON DELETE SET NULL ON UPDATE CASCADE;","stack":"Error\n    at Query.run (D:\\KHACHSAN3TL\\node_modules\\sequelize\\lib\\dialects\\mysql\\query.js:52:25)\n    at D:\\KHACHSAN3TL\\node_modules\\sequelize\\lib\\sequelize.js:315:28\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at async Review.sync (D:\\KHACHSAN3TL\\node_modules\\sequelize\\lib\\model.js:984:11)\n    at async Sequelize.sync (D:\\KHACHSAN3TL\\node_modules\\sequelize\\lib\\sequelize.js:377:9)\n    at async startServer (D:\\KHACHSAN3TL\\server.js:19:13)","timestamp":"2025-03-18T12:04:59.988Z"}
{"level":"info","message":"Database synchronized","timestamp":"2025-03-18T12:04:59.989Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-03-18T12:04:59.993Z"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-03-18T12:05:12.403Z"}
{"level":"error","message":"Database sync error: Column 'user_id' cannot be NOT NULL: needed in a foreign key constraint 'reviews_ibfk_3' SET NULL","name":"SequelizeDatabaseError","original":{"code":"ER_FK_COLUMN_NOT_NULL","errno":1830,"sql":"ALTER TABLE `reviews` ADD FOREIGN KEY (`user_id`) REFERENCES `users` (`id`) ON DELETE SET NULL ON UPDATE CASCADE;","sqlMessage":"Column 'user_id' cannot be NOT NULL: needed in a foreign key constraint 'reviews_ibfk_3' SET NULL","sqlState":"HY000"},"parameters":{},"parent":{"code":"ER_FK_COLUMN_NOT_NULL","errno":1830,"sql":"ALTER TABLE `reviews` ADD FOREIGN KEY (`user_id`) REFERENCES `users` (`id`) ON DELETE SET NULL ON UPDATE CASCADE;","sqlMessage":"Column 'user_id' cannot be NOT NULL: needed in a foreign key constraint 'reviews_ibfk_3' SET NULL","sqlState":"HY000"},"sql":"ALTER TABLE `reviews` ADD FOREIGN KEY (`user_id`) REFERENCES `users` (`id`) ON DELETE SET NULL ON UPDATE CASCADE;","stack":"Error\n    at Query.run (D:\\KHACHSAN3TL\\node_modules\\sequelize\\lib\\dialects\\mysql\\query.js:52:25)\n    at D:\\KHACHSAN3TL\\node_modules\\sequelize\\lib\\sequelize.js:315:28\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at async Review.sync (D:\\KHACHSAN3TL\\node_modules\\sequelize\\lib\\model.js:984:11)\n    at async Sequelize.sync (D:\\KHACHSAN3TL\\node_modules\\sequelize\\lib\\sequelize.js:377:9)\n    at async startServer (D:\\KHACHSAN3TL\\server.js:19:13)","timestamp":"2025-03-18T12:05:13.848Z"}
{"level":"info","message":"Database synchronized","timestamp":"2025-03-18T12:05:13.849Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-03-18T12:05:13.854Z"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-03-18T12:10:34.512Z"}
{"level":"error","message":"Database sync error: Column 'user_id' cannot be NOT NULL: needed in a foreign key constraint 'reviews_ibfk_3' SET NULL","name":"SequelizeDatabaseError","original":{"code":"ER_FK_COLUMN_NOT_NULL","errno":1830,"sql":"ALTER TABLE `reviews` ADD FOREIGN KEY (`user_id`) REFERENCES `users` (`id`) ON DELETE SET NULL ON UPDATE CASCADE;","sqlMessage":"Column 'user_id' cannot be NOT NULL: needed in a foreign key constraint 'reviews_ibfk_3' SET NULL","sqlState":"HY000"},"parameters":{},"parent":{"code":"ER_FK_COLUMN_NOT_NULL","errno":1830,"sql":"ALTER TABLE `reviews` ADD FOREIGN KEY (`user_id`) REFERENCES `users` (`id`) ON DELETE SET NULL ON UPDATE CASCADE;","sqlMessage":"Column 'user_id' cannot be NOT NULL: needed in a foreign key constraint 'reviews_ibfk_3' SET NULL","sqlState":"HY000"},"sql":"ALTER TABLE `reviews` ADD FOREIGN KEY (`user_id`) REFERENCES `users` (`id`) ON DELETE SET NULL ON UPDATE CASCADE;","stack":"Error\n    at Query.run (D:\\KHACHSAN3TL\\node_modules\\sequelize\\lib\\dialects\\mysql\\query.js:52:25)\n    at D:\\KHACHSAN3TL\\node_modules\\sequelize\\lib\\sequelize.js:315:28\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at async Review.sync (D:\\KHACHSAN3TL\\node_modules\\sequelize\\lib\\model.js:984:11)\n    at async Sequelize.sync (D:\\KHACHSAN3TL\\node_modules\\sequelize\\lib\\sequelize.js:377:9)\n    at async startServer (D:\\KHACHSAN3TL\\server.js:19:13)","timestamp":"2025-03-18T12:10:36.963Z"}
{"level":"info","message":"Database synchronized","timestamp":"2025-03-18T12:10:36.965Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-03-18T12:10:36.970Z"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-03-18T12:10:53.039Z"}
{"level":"error","message":"Database sync error: Column 'user_id' cannot be NOT NULL: needed in a foreign key constraint 'reviews_ibfk_3' SET NULL","name":"SequelizeDatabaseError","original":{"code":"ER_FK_COLUMN_NOT_NULL","errno":1830,"sql":"ALTER TABLE `reviews` ADD FOREIGN KEY (`user_id`) REFERENCES `users` (`id`) ON DELETE SET NULL ON UPDATE CASCADE;","sqlMessage":"Column 'user_id' cannot be NOT NULL: needed in a foreign key constraint 'reviews_ibfk_3' SET NULL","sqlState":"HY000"},"parameters":{},"parent":{"code":"ER_FK_COLUMN_NOT_NULL","errno":1830,"sql":"ALTER TABLE `reviews` ADD FOREIGN KEY (`user_id`) REFERENCES `users` (`id`) ON DELETE SET NULL ON UPDATE CASCADE;","sqlMessage":"Column 'user_id' cannot be NOT NULL: needed in a foreign key constraint 'reviews_ibfk_3' SET NULL","sqlState":"HY000"},"sql":"ALTER TABLE `reviews` ADD FOREIGN KEY (`user_id`) REFERENCES `users` (`id`) ON DELETE SET NULL ON UPDATE CASCADE;","stack":"Error\n    at Query.run (D:\\KHACHSAN3TL\\node_modules\\sequelize\\lib\\dialects\\mysql\\query.js:52:25)\n    at D:\\KHACHSAN3TL\\node_modules\\sequelize\\lib\\sequelize.js:315:28\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at async Review.sync (D:\\KHACHSAN3TL\\node_modules\\sequelize\\lib\\model.js:984:11)\n    at async Sequelize.sync (D:\\KHACHSAN3TL\\node_modules\\sequelize\\lib\\sequelize.js:377:9)\n    at async startServer (D:\\KHACHSAN3TL\\server.js:19:13)","timestamp":"2025-03-18T12:10:55.484Z"}
{"level":"info","message":"Database synchronized","timestamp":"2025-03-18T12:10:55.485Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-03-18T12:10:55.490Z"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-03-18T12:11:00.710Z"}
{"level":"error","message":"Database sync error: Column 'user_id' cannot be NOT NULL: needed in a foreign key constraint 'reviews_ibfk_3' SET NULL","name":"SequelizeDatabaseError","original":{"code":"ER_FK_COLUMN_NOT_NULL","errno":1830,"sql":"ALTER TABLE `reviews` ADD FOREIGN KEY (`user_id`) REFERENCES `users` (`id`) ON DELETE SET NULL ON UPDATE CASCADE;","sqlMessage":"Column 'user_id' cannot be NOT NULL: needed in a foreign key constraint 'reviews_ibfk_3' SET NULL","sqlState":"HY000"},"parameters":{},"parent":{"code":"ER_FK_COLUMN_NOT_NULL","errno":1830,"sql":"ALTER TABLE `reviews` ADD FOREIGN KEY (`user_id`) REFERENCES `users` (`id`) ON DELETE SET NULL ON UPDATE CASCADE;","sqlMessage":"Column 'user_id' cannot be NOT NULL: needed in a foreign key constraint 'reviews_ibfk_3' SET NULL","sqlState":"HY000"},"sql":"ALTER TABLE `reviews` ADD FOREIGN KEY (`user_id`) REFERENCES `users` (`id`) ON DELETE SET NULL ON UPDATE CASCADE;","stack":"Error\n    at Query.run (D:\\KHACHSAN3TL\\node_modules\\sequelize\\lib\\dialects\\mysql\\query.js:52:25)\n    at D:\\KHACHSAN3TL\\node_modules\\sequelize\\lib\\sequelize.js:315:28\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at async Review.sync (D:\\KHACHSAN3TL\\node_modules\\sequelize\\lib\\model.js:984:11)\n    at async Sequelize.sync (D:\\KHACHSAN3TL\\node_modules\\sequelize\\lib\\sequelize.js:377:9)\n    at async startServer (D:\\KHACHSAN3TL\\server.js:19:13)","timestamp":"2025-03-18T12:11:02.655Z"}
{"level":"info","message":"Database synchronized","timestamp":"2025-03-18T12:11:02.657Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-03-18T12:11:02.662Z"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-03-18T12:15:36.947Z"}
{"level":"error","message":"Database sync error: Column 'user_id' cannot be NOT NULL: needed in a foreign key constraint 'reviews_ibfk_3' SET NULL","name":"SequelizeDatabaseError","original":{"code":"ER_FK_COLUMN_NOT_NULL","errno":1830,"sql":"ALTER TABLE `reviews` ADD FOREIGN KEY (`user_id`) REFERENCES `users` (`id`) ON DELETE SET NULL ON UPDATE CASCADE;","sqlMessage":"Column 'user_id' cannot be NOT NULL: needed in a foreign key constraint 'reviews_ibfk_3' SET NULL","sqlState":"HY000"},"parameters":{},"parent":{"code":"ER_FK_COLUMN_NOT_NULL","errno":1830,"sql":"ALTER TABLE `reviews` ADD FOREIGN KEY (`user_id`) REFERENCES `users` (`id`) ON DELETE SET NULL ON UPDATE CASCADE;","sqlMessage":"Column 'user_id' cannot be NOT NULL: needed in a foreign key constraint 'reviews_ibfk_3' SET NULL","sqlState":"HY000"},"sql":"ALTER TABLE `reviews` ADD FOREIGN KEY (`user_id`) REFERENCES `users` (`id`) ON DELETE SET NULL ON UPDATE CASCADE;","stack":"Error\n    at Query.run (D:\\KHACHSAN3TL\\node_modules\\sequelize\\lib\\dialects\\mysql\\query.js:52:25)\n    at D:\\KHACHSAN3TL\\node_modules\\sequelize\\lib\\sequelize.js:315:28\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at async Review.sync (D:\\KHACHSAN3TL\\node_modules\\sequelize\\lib\\model.js:984:11)\n    at async Sequelize.sync (D:\\KHACHSAN3TL\\node_modules\\sequelize\\lib\\sequelize.js:377:9)\n    at async startServer (D:\\KHACHSAN3TL\\server.js:19:13)","timestamp":"2025-03-18T12:15:39.014Z"}
{"level":"info","message":"Database synchronized","timestamp":"2025-03-18T12:15:39.015Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-03-18T12:15:39.020Z"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-03-18T12:16:03.646Z"}
{"level":"error","message":"Database sync error: Column 'user_id' cannot be NOT NULL: needed in a foreign key constraint 'reviews_ibfk_3' SET NULL","name":"SequelizeDatabaseError","original":{"code":"ER_FK_COLUMN_NOT_NULL","errno":1830,"sql":"ALTER TABLE `reviews` ADD FOREIGN KEY (`user_id`) REFERENCES `users` (`id`) ON DELETE SET NULL ON UPDATE CASCADE;","sqlMessage":"Column 'user_id' cannot be NOT NULL: needed in a foreign key constraint 'reviews_ibfk_3' SET NULL","sqlState":"HY000"},"parameters":{},"parent":{"code":"ER_FK_COLUMN_NOT_NULL","errno":1830,"sql":"ALTER TABLE `reviews` ADD FOREIGN KEY (`user_id`) REFERENCES `users` (`id`) ON DELETE SET NULL ON UPDATE CASCADE;","sqlMessage":"Column 'user_id' cannot be NOT NULL: needed in a foreign key constraint 'reviews_ibfk_3' SET NULL","sqlState":"HY000"},"sql":"ALTER TABLE `reviews` ADD FOREIGN KEY (`user_id`) REFERENCES `users` (`id`) ON DELETE SET NULL ON UPDATE CASCADE;","stack":"Error\n    at Query.run (D:\\KHACHSAN3TL\\node_modules\\sequelize\\lib\\dialects\\mysql\\query.js:52:25)\n    at D:\\KHACHSAN3TL\\node_modules\\sequelize\\lib\\sequelize.js:315:28\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at async Review.sync (D:\\KHACHSAN3TL\\node_modules\\sequelize\\lib\\model.js:984:11)\n    at async Sequelize.sync (D:\\KHACHSAN3TL\\node_modules\\sequelize\\lib\\sequelize.js:377:9)\n    at async startServer (D:\\KHACHSAN3TL\\server.js:19:13)","timestamp":"2025-03-18T12:16:05.999Z"}
{"level":"info","message":"Database synchronized","timestamp":"2025-03-18T12:16:06.001Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-03-18T12:16:06.008Z"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-03-18T12:22:22.906Z"}
{"level":"error","message":"Database sync error: Column 'user_id' cannot be NOT NULL: needed in a foreign key constraint 'reviews_ibfk_3' SET NULL","name":"SequelizeDatabaseError","original":{"code":"ER_FK_COLUMN_NOT_NULL","errno":1830,"sql":"ALTER TABLE `reviews` ADD FOREIGN KEY (`user_id`) REFERENCES `users` (`id`) ON DELETE SET NULL ON UPDATE CASCADE;","sqlMessage":"Column 'user_id' cannot be NOT NULL: needed in a foreign key constraint 'reviews_ibfk_3' SET NULL","sqlState":"HY000"},"parameters":{},"parent":{"code":"ER_FK_COLUMN_NOT_NULL","errno":1830,"sql":"ALTER TABLE `reviews` ADD FOREIGN KEY (`user_id`) REFERENCES `users` (`id`) ON DELETE SET NULL ON UPDATE CASCADE;","sqlMessage":"Column 'user_id' cannot be NOT NULL: needed in a foreign key constraint 'reviews_ibfk_3' SET NULL","sqlState":"HY000"},"sql":"ALTER TABLE `reviews` ADD FOREIGN KEY (`user_id`) REFERENCES `users` (`id`) ON DELETE SET NULL ON UPDATE CASCADE;","stack":"Error\n    at Query.run (D:\\KHACHSAN3TL\\node_modules\\sequelize\\lib\\dialects\\mysql\\query.js:52:25)\n    at D:\\KHACHSAN3TL\\node_modules\\sequelize\\lib\\sequelize.js:315:28\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at async Review.sync (D:\\KHACHSAN3TL\\node_modules\\sequelize\\lib\\model.js:984:11)\n    at async Sequelize.sync (D:\\KHACHSAN3TL\\node_modules\\sequelize\\lib\\sequelize.js:377:9)\n    at async startServer (D:\\KHACHSAN3TL\\server.js:19:13)","timestamp":"2025-03-18T12:22:24.848Z"}
{"level":"info","message":"Database synchronized","timestamp":"2025-03-18T12:22:24.849Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-03-18T12:22:24.854Z"}
{"level":"info","message":"Admin 3 (Admin) cancelled booking 2 (undefined)","timestamp":"2025-03-18T12:22:46.426Z"}
{"level":"info","message":"Admin 3 (Admin) cancelled booking 4 (undefined)","timestamp":"2025-03-18T12:22:51.551Z"}
{"level":"info","message":"Admin 3 (Admin) cancelled booking 6 (undefined)","timestamp":"2025-03-18T12:22:56.212Z"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-03-18T12:24:41.484Z"}
{"level":"error","message":"Database sync error: Column 'user_id' cannot be NOT NULL: needed in a foreign key constraint 'reviews_ibfk_3' SET NULL","name":"SequelizeDatabaseError","original":{"code":"ER_FK_COLUMN_NOT_NULL","errno":1830,"sql":"ALTER TABLE `reviews` ADD FOREIGN KEY (`user_id`) REFERENCES `users` (`id`) ON DELETE SET NULL ON UPDATE CASCADE;","sqlMessage":"Column 'user_id' cannot be NOT NULL: needed in a foreign key constraint 'reviews_ibfk_3' SET NULL","sqlState":"HY000"},"parameters":{},"parent":{"code":"ER_FK_COLUMN_NOT_NULL","errno":1830,"sql":"ALTER TABLE `reviews` ADD FOREIGN KEY (`user_id`) REFERENCES `users` (`id`) ON DELETE SET NULL ON UPDATE CASCADE;","sqlMessage":"Column 'user_id' cannot be NOT NULL: needed in a foreign key constraint 'reviews_ibfk_3' SET NULL","sqlState":"HY000"},"sql":"ALTER TABLE `reviews` ADD FOREIGN KEY (`user_id`) REFERENCES `users` (`id`) ON DELETE SET NULL ON UPDATE CASCADE;","stack":"Error\n    at Query.run (D:\\KHACHSAN3TL\\node_modules\\sequelize\\lib\\dialects\\mysql\\query.js:52:25)\n    at D:\\KHACHSAN3TL\\node_modules\\sequelize\\lib\\sequelize.js:315:28\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at async Review.sync (D:\\KHACHSAN3TL\\node_modules\\sequelize\\lib\\model.js:984:11)\n    at async Sequelize.sync (D:\\KHACHSAN3TL\\node_modules\\sequelize\\lib\\sequelize.js:377:9)\n    at async startServer (D:\\KHACHSAN3TL\\server.js:19:13)","timestamp":"2025-03-18T12:24:43.859Z"}
{"level":"info","message":"Database synchronized","timestamp":"2025-03-18T12:24:43.861Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-03-18T12:24:43.869Z"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-03-18T12:25:03.925Z"}
{"level":"error","message":"Database sync error: Column 'user_id' cannot be NOT NULL: needed in a foreign key constraint 'reviews_ibfk_3' SET NULL","name":"SequelizeDatabaseError","original":{"code":"ER_FK_COLUMN_NOT_NULL","errno":1830,"sql":"ALTER TABLE `reviews` ADD FOREIGN KEY (`user_id`) REFERENCES `users` (`id`) ON DELETE SET NULL ON UPDATE CASCADE;","sqlMessage":"Column 'user_id' cannot be NOT NULL: needed in a foreign key constraint 'reviews_ibfk_3' SET NULL","sqlState":"HY000"},"parameters":{},"parent":{"code":"ER_FK_COLUMN_NOT_NULL","errno":1830,"sql":"ALTER TABLE `reviews` ADD FOREIGN KEY (`user_id`) REFERENCES `users` (`id`) ON DELETE SET NULL ON UPDATE CASCADE;","sqlMessage":"Column 'user_id' cannot be NOT NULL: needed in a foreign key constraint 'reviews_ibfk_3' SET NULL","sqlState":"HY000"},"sql":"ALTER TABLE `reviews` ADD FOREIGN KEY (`user_id`) REFERENCES `users` (`id`) ON DELETE SET NULL ON UPDATE CASCADE;","stack":"Error\n    at Query.run (D:\\KHACHSAN3TL\\node_modules\\sequelize\\lib\\dialects\\mysql\\query.js:52:25)\n    at D:\\KHACHSAN3TL\\node_modules\\sequelize\\lib\\sequelize.js:315:28\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at async Review.sync (D:\\KHACHSAN3TL\\node_modules\\sequelize\\lib\\model.js:984:11)\n    at async Sequelize.sync (D:\\KHACHSAN3TL\\node_modules\\sequelize\\lib\\sequelize.js:377:9)\n    at async startServer (D:\\KHACHSAN3TL\\server.js:19:13)","timestamp":"2025-03-18T12:25:06.658Z"}
{"level":"info","message":"Database synchronized","timestamp":"2025-03-18T12:25:06.659Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-03-18T12:25:06.664Z"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-03-18T12:28:04.637Z"}
{"level":"error","message":"Database sync error: Column 'user_id' cannot be NOT NULL: needed in a foreign key constraint 'reviews_ibfk_3' SET NULL","name":"SequelizeDatabaseError","original":{"code":"ER_FK_COLUMN_NOT_NULL","errno":1830,"sql":"ALTER TABLE `reviews` ADD FOREIGN KEY (`user_id`) REFERENCES `users` (`id`) ON DELETE SET NULL ON UPDATE CASCADE;","sqlMessage":"Column 'user_id' cannot be NOT NULL: needed in a foreign key constraint 'reviews_ibfk_3' SET NULL","sqlState":"HY000"},"parameters":{},"parent":{"code":"ER_FK_COLUMN_NOT_NULL","errno":1830,"sql":"ALTER TABLE `reviews` ADD FOREIGN KEY (`user_id`) REFERENCES `users` (`id`) ON DELETE SET NULL ON UPDATE CASCADE;","sqlMessage":"Column 'user_id' cannot be NOT NULL: needed in a foreign key constraint 'reviews_ibfk_3' SET NULL","sqlState":"HY000"},"sql":"ALTER TABLE `reviews` ADD FOREIGN KEY (`user_id`) REFERENCES `users` (`id`) ON DELETE SET NULL ON UPDATE CASCADE;","stack":"Error\n    at Query.run (D:\\KHACHSAN3TL\\node_modules\\sequelize\\lib\\dialects\\mysql\\query.js:52:25)\n    at D:\\KHACHSAN3TL\\node_modules\\sequelize\\lib\\sequelize.js:315:28\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at async Review.sync (D:\\KHACHSAN3TL\\node_modules\\sequelize\\lib\\model.js:984:11)\n    at async Sequelize.sync (D:\\KHACHSAN3TL\\node_modules\\sequelize\\lib\\sequelize.js:377:9)\n    at async startServer (D:\\KHACHSAN3TL\\server.js:19:13)","timestamp":"2025-03-18T12:28:07.445Z"}
{"level":"info","message":"Database synchronized","timestamp":"2025-03-18T12:28:07.447Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-03-18T12:28:07.454Z"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-03-18T12:28:13.088Z"}
{"level":"error","message":"Database sync error: Column 'user_id' cannot be NOT NULL: needed in a foreign key constraint 'reviews_ibfk_3' SET NULL","name":"SequelizeDatabaseError","original":{"code":"ER_FK_COLUMN_NOT_NULL","errno":1830,"sql":"ALTER TABLE `reviews` ADD FOREIGN KEY (`user_id`) REFERENCES `users` (`id`) ON DELETE SET NULL ON UPDATE CASCADE;","sqlMessage":"Column 'user_id' cannot be NOT NULL: needed in a foreign key constraint 'reviews_ibfk_3' SET NULL","sqlState":"HY000"},"parameters":{},"parent":{"code":"ER_FK_COLUMN_NOT_NULL","errno":1830,"sql":"ALTER TABLE `reviews` ADD FOREIGN KEY (`user_id`) REFERENCES `users` (`id`) ON DELETE SET NULL ON UPDATE CASCADE;","sqlMessage":"Column 'user_id' cannot be NOT NULL: needed in a foreign key constraint 'reviews_ibfk_3' SET NULL","sqlState":"HY000"},"sql":"ALTER TABLE `reviews` ADD FOREIGN KEY (`user_id`) REFERENCES `users` (`id`) ON DELETE SET NULL ON UPDATE CASCADE;","stack":"Error\n    at Query.run (D:\\KHACHSAN3TL\\node_modules\\sequelize\\lib\\dialects\\mysql\\query.js:52:25)\n    at D:\\KHACHSAN3TL\\node_modules\\sequelize\\lib\\sequelize.js:315:28\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at async Review.sync (D:\\KHACHSAN3TL\\node_modules\\sequelize\\lib\\model.js:984:11)\n    at async Sequelize.sync (D:\\KHACHSAN3TL\\node_modules\\sequelize\\lib\\sequelize.js:377:9)\n    at async startServer (D:\\KHACHSAN3TL\\server.js:19:13)","timestamp":"2025-03-18T12:28:15.287Z"}
{"level":"info","message":"Database synchronized","timestamp":"2025-03-18T12:28:15.289Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-03-18T12:28:15.293Z"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-03-18T12:32:50.788Z"}
{"level":"error","message":"Database sync error: Column 'user_id' cannot be NOT NULL: needed in a foreign key constraint 'reviews_ibfk_3' SET NULL","name":"SequelizeDatabaseError","original":{"code":"ER_FK_COLUMN_NOT_NULL","errno":1830,"sql":"ALTER TABLE `reviews` ADD FOREIGN KEY (`user_id`) REFERENCES `users` (`id`) ON DELETE SET NULL ON UPDATE CASCADE;","sqlMessage":"Column 'user_id' cannot be NOT NULL: needed in a foreign key constraint 'reviews_ibfk_3' SET NULL","sqlState":"HY000"},"parameters":{},"parent":{"code":"ER_FK_COLUMN_NOT_NULL","errno":1830,"sql":"ALTER TABLE `reviews` ADD FOREIGN KEY (`user_id`) REFERENCES `users` (`id`) ON DELETE SET NULL ON UPDATE CASCADE;","sqlMessage":"Column 'user_id' cannot be NOT NULL: needed in a foreign key constraint 'reviews_ibfk_3' SET NULL","sqlState":"HY000"},"sql":"ALTER TABLE `reviews` ADD FOREIGN KEY (`user_id`) REFERENCES `users` (`id`) ON DELETE SET NULL ON UPDATE CASCADE;","stack":"Error\n    at Query.run (D:\\KHACHSAN3TL\\node_modules\\sequelize\\lib\\dialects\\mysql\\query.js:52:25)\n    at D:\\KHACHSAN3TL\\node_modules\\sequelize\\lib\\sequelize.js:315:28\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at async Review.sync (D:\\KHACHSAN3TL\\node_modules\\sequelize\\lib\\model.js:984:11)\n    at async Sequelize.sync (D:\\KHACHSAN3TL\\node_modules\\sequelize\\lib\\sequelize.js:377:9)\n    at async startServer (D:\\KHACHSAN3TL\\server.js:19:13)","timestamp":"2025-03-18T12:32:53.442Z"}
{"level":"info","message":"Database synchronized","timestamp":"2025-03-18T12:32:53.443Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-03-18T12:32:53.448Z"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-03-18T12:35:45.263Z"}
{"level":"error","message":"Database sync error: Column 'user_id' cannot be NOT NULL: needed in a foreign key constraint 'reviews_ibfk_3' SET NULL","name":"SequelizeDatabaseError","original":{"code":"ER_FK_COLUMN_NOT_NULL","errno":1830,"sql":"ALTER TABLE `reviews` ADD FOREIGN KEY (`user_id`) REFERENCES `users` (`id`) ON DELETE SET NULL ON UPDATE CASCADE;","sqlMessage":"Column 'user_id' cannot be NOT NULL: needed in a foreign key constraint 'reviews_ibfk_3' SET NULL","sqlState":"HY000"},"parameters":{},"parent":{"code":"ER_FK_COLUMN_NOT_NULL","errno":1830,"sql":"ALTER TABLE `reviews` ADD FOREIGN KEY (`user_id`) REFERENCES `users` (`id`) ON DELETE SET NULL ON UPDATE CASCADE;","sqlMessage":"Column 'user_id' cannot be NOT NULL: needed in a foreign key constraint 'reviews_ibfk_3' SET NULL","sqlState":"HY000"},"sql":"ALTER TABLE `reviews` ADD FOREIGN KEY (`user_id`) REFERENCES `users` (`id`) ON DELETE SET NULL ON UPDATE CASCADE;","stack":"Error\n    at Query.run (D:\\KHACHSAN3TL\\node_modules\\sequelize\\lib\\dialects\\mysql\\query.js:52:25)\n    at D:\\KHACHSAN3TL\\node_modules\\sequelize\\lib\\sequelize.js:315:28\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at async Review.sync (D:\\KHACHSAN3TL\\node_modules\\sequelize\\lib\\model.js:984:11)\n    at async Sequelize.sync (D:\\KHACHSAN3TL\\node_modules\\sequelize\\lib\\sequelize.js:377:9)\n    at async startServer (D:\\KHACHSAN3TL\\server.js:19:13)","timestamp":"2025-03-18T12:35:47.889Z"}
{"level":"info","message":"Database synchronized","timestamp":"2025-03-18T12:35:47.890Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-03-18T12:35:47.894Z"}
{"level":"info","message":"Admin 3 (Admin) cancelled booking 16","timestamp":"2025-03-18T12:36:21.633Z"}
{"level":"info","message":"Admin 3 (Admin) cancelled booking 17","timestamp":"2025-03-18T12:36:23.707Z"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-03-18T12:36:51.471Z"}
{"level":"error","message":"Database sync error: Column 'user_id' cannot be NOT NULL: needed in a foreign key constraint 'reviews_ibfk_3' SET NULL","name":"SequelizeDatabaseError","original":{"code":"ER_FK_COLUMN_NOT_NULL","errno":1830,"sql":"ALTER TABLE `reviews` ADD FOREIGN KEY (`user_id`) REFERENCES `users` (`id`) ON DELETE SET NULL ON UPDATE CASCADE;","sqlMessage":"Column 'user_id' cannot be NOT NULL: needed in a foreign key constraint 'reviews_ibfk_3' SET NULL","sqlState":"HY000"},"parameters":{},"parent":{"code":"ER_FK_COLUMN_NOT_NULL","errno":1830,"sql":"ALTER TABLE `reviews` ADD FOREIGN KEY (`user_id`) REFERENCES `users` (`id`) ON DELETE SET NULL ON UPDATE CASCADE;","sqlMessage":"Column 'user_id' cannot be NOT NULL: needed in a foreign key constraint 'reviews_ibfk_3' SET NULL","sqlState":"HY000"},"sql":"ALTER TABLE `reviews` ADD FOREIGN KEY (`user_id`) REFERENCES `users` (`id`) ON DELETE SET NULL ON UPDATE CASCADE;","stack":"Error\n    at Query.run (D:\\KHACHSAN3TL\\node_modules\\sequelize\\lib\\dialects\\mysql\\query.js:52:25)\n    at D:\\KHACHSAN3TL\\node_modules\\sequelize\\lib\\sequelize.js:315:28\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at async Review.sync (D:\\KHACHSAN3TL\\node_modules\\sequelize\\lib\\model.js:984:11)\n    at async Sequelize.sync (D:\\KHACHSAN3TL\\node_modules\\sequelize\\lib\\sequelize.js:377:9)\n    at async startServer (D:\\KHACHSAN3TL\\server.js:19:13)","timestamp":"2025-03-18T12:36:54.654Z"}
{"level":"info","message":"Database synchronized","timestamp":"2025-03-18T12:36:54.656Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-03-18T12:36:54.661Z"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-03-18T12:47:03.823Z"}
{"level":"error","message":"Database sync error: Column 'user_id' cannot be NOT NULL: needed in a foreign key constraint 'reviews_ibfk_3' SET NULL","name":"SequelizeDatabaseError","original":{"code":"ER_FK_COLUMN_NOT_NULL","errno":1830,"sql":"ALTER TABLE `reviews` ADD FOREIGN KEY (`user_id`) REFERENCES `users` (`id`) ON DELETE SET NULL ON UPDATE CASCADE;","sqlMessage":"Column 'user_id' cannot be NOT NULL: needed in a foreign key constraint 'reviews_ibfk_3' SET NULL","sqlState":"HY000"},"parameters":{},"parent":{"code":"ER_FK_COLUMN_NOT_NULL","errno":1830,"sql":"ALTER TABLE `reviews` ADD FOREIGN KEY (`user_id`) REFERENCES `users` (`id`) ON DELETE SET NULL ON UPDATE CASCADE;","sqlMessage":"Column 'user_id' cannot be NOT NULL: needed in a foreign key constraint 'reviews_ibfk_3' SET NULL","sqlState":"HY000"},"sql":"ALTER TABLE `reviews` ADD FOREIGN KEY (`user_id`) REFERENCES `users` (`id`) ON DELETE SET NULL ON UPDATE CASCADE;","stack":"Error\n    at Query.run (D:\\KHACHSAN3TL\\node_modules\\sequelize\\lib\\dialects\\mysql\\query.js:52:25)\n    at D:\\KHACHSAN3TL\\node_modules\\sequelize\\lib\\sequelize.js:315:28\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at async Review.sync (D:\\KHACHSAN3TL\\node_modules\\sequelize\\lib\\model.js:984:11)\n    at async Sequelize.sync (D:\\KHACHSAN3TL\\node_modules\\sequelize\\lib\\sequelize.js:377:9)\n    at async startServer (D:\\KHACHSAN3TL\\server.js:19:13)","timestamp":"2025-03-18T12:47:07.362Z"}
{"level":"info","message":"Database synchronized","timestamp":"2025-03-18T12:47:07.363Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-03-18T12:47:07.368Z"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-03-18T12:47:15.005Z"}
{"level":"error","message":"Database sync error: Column 'user_id' cannot be NOT NULL: needed in a foreign key constraint 'reviews_ibfk_3' SET NULL","name":"SequelizeDatabaseError","original":{"code":"ER_FK_COLUMN_NOT_NULL","errno":1830,"sql":"ALTER TABLE `reviews` ADD FOREIGN KEY (`user_id`) REFERENCES `users` (`id`) ON DELETE SET NULL ON UPDATE CASCADE;","sqlMessage":"Column 'user_id' cannot be NOT NULL: needed in a foreign key constraint 'reviews_ibfk_3' SET NULL","sqlState":"HY000"},"parameters":{},"parent":{"code":"ER_FK_COLUMN_NOT_NULL","errno":1830,"sql":"ALTER TABLE `reviews` ADD FOREIGN KEY (`user_id`) REFERENCES `users` (`id`) ON DELETE SET NULL ON UPDATE CASCADE;","sqlMessage":"Column 'user_id' cannot be NOT NULL: needed in a foreign key constraint 'reviews_ibfk_3' SET NULL","sqlState":"HY000"},"sql":"ALTER TABLE `reviews` ADD FOREIGN KEY (`user_id`) REFERENCES `users` (`id`) ON DELETE SET NULL ON UPDATE CASCADE;","stack":"Error\n    at Query.run (D:\\KHACHSAN3TL\\node_modules\\sequelize\\lib\\dialects\\mysql\\query.js:52:25)\n    at D:\\KHACHSAN3TL\\node_modules\\sequelize\\lib\\sequelize.js:315:28\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at async Review.sync (D:\\KHACHSAN3TL\\node_modules\\sequelize\\lib\\model.js:984:11)\n    at async Sequelize.sync (D:\\KHACHSAN3TL\\node_modules\\sequelize\\lib\\sequelize.js:377:9)\n    at async startServer (D:\\KHACHSAN3TL\\server.js:19:13)","timestamp":"2025-03-18T12:47:18.012Z"}
{"level":"info","message":"Database synchronized","timestamp":"2025-03-18T12:47:18.014Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-03-18T12:47:18.023Z"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-03-18T12:47:38.890Z"}
{"level":"error","message":"Database sync error: Column 'user_id' cannot be NOT NULL: needed in a foreign key constraint 'reviews_ibfk_3' SET NULL","name":"SequelizeDatabaseError","original":{"code":"ER_FK_COLUMN_NOT_NULL","errno":1830,"sql":"ALTER TABLE `reviews` ADD FOREIGN KEY (`user_id`) REFERENCES `users` (`id`) ON DELETE SET NULL ON UPDATE CASCADE;","sqlMessage":"Column 'user_id' cannot be NOT NULL: needed in a foreign key constraint 'reviews_ibfk_3' SET NULL","sqlState":"HY000"},"parameters":{},"parent":{"code":"ER_FK_COLUMN_NOT_NULL","errno":1830,"sql":"ALTER TABLE `reviews` ADD FOREIGN KEY (`user_id`) REFERENCES `users` (`id`) ON DELETE SET NULL ON UPDATE CASCADE;","sqlMessage":"Column 'user_id' cannot be NOT NULL: needed in a foreign key constraint 'reviews_ibfk_3' SET NULL","sqlState":"HY000"},"sql":"ALTER TABLE `reviews` ADD FOREIGN KEY (`user_id`) REFERENCES `users` (`id`) ON DELETE SET NULL ON UPDATE CASCADE;","stack":"Error\n    at Query.run (D:\\KHACHSAN3TL\\node_modules\\sequelize\\lib\\dialects\\mysql\\query.js:52:25)\n    at D:\\KHACHSAN3TL\\node_modules\\sequelize\\lib\\sequelize.js:315:28\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at async Review.sync (D:\\KHACHSAN3TL\\node_modules\\sequelize\\lib\\model.js:984:11)\n    at async Sequelize.sync (D:\\KHACHSAN3TL\\node_modules\\sequelize\\lib\\sequelize.js:377:9)\n    at async startServer (D:\\KHACHSAN3TL\\server.js:19:13)","timestamp":"2025-03-18T12:47:42.150Z"}
{"level":"info","message":"Database synchronized","timestamp":"2025-03-18T12:47:42.151Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-03-18T12:47:42.159Z"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-03-18T12:50:30.827Z"}
{"level":"error","message":"Database sync error: Column 'user_id' cannot be NOT NULL: needed in a foreign key constraint 'reviews_ibfk_3' SET NULL","name":"SequelizeDatabaseError","original":{"code":"ER_FK_COLUMN_NOT_NULL","errno":1830,"sql":"ALTER TABLE `reviews` ADD FOREIGN KEY (`user_id`) REFERENCES `users` (`id`) ON DELETE SET NULL ON UPDATE CASCADE;","sqlMessage":"Column 'user_id' cannot be NOT NULL: needed in a foreign key constraint 'reviews_ibfk_3' SET NULL","sqlState":"HY000"},"parameters":{},"parent":{"code":"ER_FK_COLUMN_NOT_NULL","errno":1830,"sql":"ALTER TABLE `reviews` ADD FOREIGN KEY (`user_id`) REFERENCES `users` (`id`) ON DELETE SET NULL ON UPDATE CASCADE;","sqlMessage":"Column 'user_id' cannot be NOT NULL: needed in a foreign key constraint 'reviews_ibfk_3' SET NULL","sqlState":"HY000"},"sql":"ALTER TABLE `reviews` ADD FOREIGN KEY (`user_id`) REFERENCES `users` (`id`) ON DELETE SET NULL ON UPDATE CASCADE;","stack":"Error\n    at Query.run (D:\\KHACHSAN3TL\\node_modules\\sequelize\\lib\\dialects\\mysql\\query.js:52:25)\n    at D:\\KHACHSAN3TL\\node_modules\\sequelize\\lib\\sequelize.js:315:28\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at async Review.sync (D:\\KHACHSAN3TL\\node_modules\\sequelize\\lib\\model.js:984:11)\n    at async Sequelize.sync (D:\\KHACHSAN3TL\\node_modules\\sequelize\\lib\\sequelize.js:377:9)\n    at async startServer (D:\\KHACHSAN3TL\\server.js:19:13)","timestamp":"2025-03-18T12:50:31.972Z"}
{"level":"info","message":"Database synchronized","timestamp":"2025-03-18T12:50:31.973Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-03-18T12:50:31.976Z"}
{"level":"info","message":"Payment processed for booking 18 (undefined) by admin 3","timestamp":"2025-03-18T12:57:33.015Z"}
{"level":"info","message":"Checkout completed for booking 18 (undefined) by admin 3","timestamp":"2025-03-18T12:57:56.179Z"}
{"level":"info","message":"Checkout completed for booking 8 (undefined) by admin 3","timestamp":"2025-03-18T12:58:48.701Z"}
{"level":"info","message":"Checkout completed for booking 12 (undefined) by admin 3","timestamp":"2025-03-18T13:01:25.700Z"}
{"level":"info","message":"Payment processed for booking 12 (undefined) by admin 3","timestamp":"2025-03-18T13:01:37.766Z"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-03-18T13:04:32.294Z"}
{"level":"error","message":"Database sync error: Column 'user_id' cannot be NOT NULL: needed in a foreign key constraint 'reviews_ibfk_3' SET NULL","name":"SequelizeDatabaseError","original":{"code":"ER_FK_COLUMN_NOT_NULL","errno":1830,"sql":"ALTER TABLE `reviews` ADD FOREIGN KEY (`user_id`) REFERENCES `users` (`id`) ON DELETE SET NULL ON UPDATE CASCADE;","sqlMessage":"Column 'user_id' cannot be NOT NULL: needed in a foreign key constraint 'reviews_ibfk_3' SET NULL","sqlState":"HY000"},"parameters":{},"parent":{"code":"ER_FK_COLUMN_NOT_NULL","errno":1830,"sql":"ALTER TABLE `reviews` ADD FOREIGN KEY (`user_id`) REFERENCES `users` (`id`) ON DELETE SET NULL ON UPDATE CASCADE;","sqlMessage":"Column 'user_id' cannot be NOT NULL: needed in a foreign key constraint 'reviews_ibfk_3' SET NULL","sqlState":"HY000"},"sql":"ALTER TABLE `reviews` ADD FOREIGN KEY (`user_id`) REFERENCES `users` (`id`) ON DELETE SET NULL ON UPDATE CASCADE;","stack":"Error\n    at Query.run (D:\\KHACHSAN3TL\\node_modules\\sequelize\\lib\\dialects\\mysql\\query.js:52:25)\n    at D:\\KHACHSAN3TL\\node_modules\\sequelize\\lib\\sequelize.js:315:28\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at async Review.sync (D:\\KHACHSAN3TL\\node_modules\\sequelize\\lib\\model.js:984:11)\n    at async Sequelize.sync (D:\\KHACHSAN3TL\\node_modules\\sequelize\\lib\\sequelize.js:377:9)\n    at async startServer (D:\\KHACHSAN3TL\\server.js:19:13)","timestamp":"2025-03-18T13:04:35.970Z"}
{"level":"info","message":"Database synchronized","timestamp":"2025-03-18T13:04:35.971Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-03-18T13:04:35.976Z"}
{"level":"info","message":"Payment processed for booking 11 (undefined) by admin 3","timestamp":"2025-03-18T13:05:27.442Z"}
{"level":"info","message":"Payment processed for booking 7 (undefined) by admin 3","timestamp":"2025-03-18T13:05:51.070Z"}
{"level":"info","message":"Checkout completed for booking 11 (undefined) by admin 3","timestamp":"2025-03-18T13:05:59.207Z"}
{"level":"info","message":"Checkout completed for booking 7 (undefined) by admin 3","timestamp":"2025-03-18T13:06:06.512Z"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-03-18T13:11:14.458Z"}
{"fields":["booking_id"],"index":"Reviews_booking_id_foreign_idx","level":"error","message":"Database sync error: Cannot add or update a child row: a foreign key constraint fails (`khachsan3tl`.`#sql-17c0_196`, CONSTRAINT `Reviews_booking_id_foreign_idx` FOREIGN KEY (`booking_id`) REFERENCES `bookings` (`id`) ON UPDATE CASCADE)","name":"SequelizeForeignKeyConstraintError","original":{"code":"ER_NO_REFERENCED_ROW_2","errno":1452,"sql":"ALTER TABLE `Reviews` ADD `booking_id` INTEGER NOT NULL, ADD CONSTRAINT `Reviews_booking_id_foreign_idx` FOREIGN KEY (`booking_id`) REFERENCES `Bookings` (`id`) ON DELETE NO ACTION ON UPDATE CASCADE;","sqlMessage":"Cannot add or update a child row: a foreign key constraint fails (`khachsan3tl`.`#sql-17c0_196`, CONSTRAINT `Reviews_booking_id_foreign_idx` FOREIGN KEY (`booking_id`) REFERENCES `bookings` (`id`) ON UPDATE CASCADE)","sqlState":"23000"},"parameters":{},"parent":{"code":"ER_NO_REFERENCED_ROW_2","errno":1452,"sql":"ALTER TABLE `Reviews` ADD `booking_id` INTEGER NOT NULL, ADD CONSTRAINT `Reviews_booking_id_foreign_idx` FOREIGN KEY (`booking_id`) REFERENCES `Bookings` (`id`) ON DELETE NO ACTION ON UPDATE CASCADE;","sqlMessage":"Cannot add or update a child row: a foreign key constraint fails (`khachsan3tl`.`#sql-17c0_196`, CONSTRAINT `Reviews_booking_id_foreign_idx` FOREIGN KEY (`booking_id`) REFERENCES `bookings` (`id`) ON UPDATE CASCADE)","sqlState":"23000"},"reltype":"child","sql":"ALTER TABLE `Reviews` ADD `booking_id` INTEGER NOT NULL, ADD CONSTRAINT `Reviews_booking_id_foreign_idx` FOREIGN KEY (`booking_id`) REFERENCES `Bookings` (`id`) ON DELETE NO ACTION ON UPDATE CASCADE;","stack":"Error\n    at Query.run (D:\\KHACHSAN3TL\\node_modules\\sequelize\\lib\\dialects\\mysql\\query.js:52:25)\n    at D:\\KHACHSAN3TL\\node_modules\\sequelize\\lib\\sequelize.js:315:28\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at async MySQLQueryInterface.addColumn (D:\\KHACHSAN3TL\\node_modules\\sequelize\\lib\\dialects\\abstract\\query-interface.js:184:12)\n    at async Review.sync (D:\\KHACHSAN3TL\\node_modules\\sequelize\\lib\\model.js:958:11)\n    at async Sequelize.sync (D:\\KHACHSAN3TL\\node_modules\\sequelize\\lib\\sequelize.js:377:9)\n    at async startServer (D:\\KHACHSAN3TL\\server.js:19:13)","table":"bookings","timestamp":"2025-03-18T13:11:18.184Z"}
{"level":"info","message":"Database synchronized","timestamp":"2025-03-18T13:11:18.186Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-03-18T13:11:18.193Z"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-03-18T13:12:33.260Z"}
{"fields":["booking_id"],"index":"Reviews_booking_id_foreign_idx","level":"error","message":"Database sync error: Cannot add or update a child row: a foreign key constraint fails (`khachsan3tl`.`#sql-17c0_19b`, CONSTRAINT `Reviews_booking_id_foreign_idx` FOREIGN KEY (`booking_id`) REFERENCES `bookings` (`id`) ON UPDATE CASCADE)","name":"SequelizeForeignKeyConstraintError","original":{"code":"ER_NO_REFERENCED_ROW_2","errno":1452,"sql":"ALTER TABLE `Reviews` ADD `booking_id` INTEGER NOT NULL, ADD CONSTRAINT `Reviews_booking_id_foreign_idx` FOREIGN KEY (`booking_id`) REFERENCES `Bookings` (`id`) ON DELETE NO ACTION ON UPDATE CASCADE;","sqlMessage":"Cannot add or update a child row: a foreign key constraint fails (`khachsan3tl`.`#sql-17c0_19b`, CONSTRAINT `Reviews_booking_id_foreign_idx` FOREIGN KEY (`booking_id`) REFERENCES `bookings` (`id`) ON UPDATE CASCADE)","sqlState":"23000"},"parameters":{},"parent":{"code":"ER_NO_REFERENCED_ROW_2","errno":1452,"sql":"ALTER TABLE `Reviews` ADD `booking_id` INTEGER NOT NULL, ADD CONSTRAINT `Reviews_booking_id_foreign_idx` FOREIGN KEY (`booking_id`) REFERENCES `Bookings` (`id`) ON DELETE NO ACTION ON UPDATE CASCADE;","sqlMessage":"Cannot add or update a child row: a foreign key constraint fails (`khachsan3tl`.`#sql-17c0_19b`, CONSTRAINT `Reviews_booking_id_foreign_idx` FOREIGN KEY (`booking_id`) REFERENCES `bookings` (`id`) ON UPDATE CASCADE)","sqlState":"23000"},"reltype":"child","sql":"ALTER TABLE `Reviews` ADD `booking_id` INTEGER NOT NULL, ADD CONSTRAINT `Reviews_booking_id_foreign_idx` FOREIGN KEY (`booking_id`) REFERENCES `Bookings` (`id`) ON DELETE NO ACTION ON UPDATE CASCADE;","stack":"Error\n    at Query.run (D:\\KHACHSAN3TL\\node_modules\\sequelize\\lib\\dialects\\mysql\\query.js:52:25)\n    at D:\\KHACHSAN3TL\\node_modules\\sequelize\\lib\\sequelize.js:315:28\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at async MySQLQueryInterface.addColumn (D:\\KHACHSAN3TL\\node_modules\\sequelize\\lib\\dialects\\abstract\\query-interface.js:184:12)\n    at async Review.sync (D:\\KHACHSAN3TL\\node_modules\\sequelize\\lib\\model.js:958:11)\n    at async Sequelize.sync (D:\\KHACHSAN3TL\\node_modules\\sequelize\\lib\\sequelize.js:377:9)\n    at async startServer (D:\\KHACHSAN3TL\\server.js:19:13)","table":"bookings","timestamp":"2025-03-18T13:12:36.221Z"}
{"level":"info","message":"Database synchronized","timestamp":"2025-03-18T13:12:36.223Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-03-18T13:12:36.227Z"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-03-18T13:15:08.691Z"}
{"fields":["booking_id"],"index":"Reviews_booking_id_foreign_idx","level":"error","message":"Database sync error: Cannot add or update a child row: a foreign key constraint fails (`khachsan3tl`.`#sql-17c0_19f`, CONSTRAINT `Reviews_booking_id_foreign_idx` FOREIGN KEY (`booking_id`) REFERENCES `bookings` (`id`) ON UPDATE CASCADE)","name":"SequelizeForeignKeyConstraintError","original":{"code":"ER_NO_REFERENCED_ROW_2","errno":1452,"sql":"ALTER TABLE `Reviews` ADD `booking_id` INTEGER NOT NULL, ADD CONSTRAINT `Reviews_booking_id_foreign_idx` FOREIGN KEY (`booking_id`) REFERENCES `Bookings` (`id`) ON DELETE NO ACTION ON UPDATE CASCADE;","sqlMessage":"Cannot add or update a child row: a foreign key constraint fails (`khachsan3tl`.`#sql-17c0_19f`, CONSTRAINT `Reviews_booking_id_foreign_idx` FOREIGN KEY (`booking_id`) REFERENCES `bookings` (`id`) ON UPDATE CASCADE)","sqlState":"23000"},"parameters":{},"parent":{"code":"ER_NO_REFERENCED_ROW_2","errno":1452,"sql":"ALTER TABLE `Reviews` ADD `booking_id` INTEGER NOT NULL, ADD CONSTRAINT `Reviews_booking_id_foreign_idx` FOREIGN KEY (`booking_id`) REFERENCES `Bookings` (`id`) ON DELETE NO ACTION ON UPDATE CASCADE;","sqlMessage":"Cannot add or update a child row: a foreign key constraint fails (`khachsan3tl`.`#sql-17c0_19f`, CONSTRAINT `Reviews_booking_id_foreign_idx` FOREIGN KEY (`booking_id`) REFERENCES `bookings` (`id`) ON UPDATE CASCADE)","sqlState":"23000"},"reltype":"child","sql":"ALTER TABLE `Reviews` ADD `booking_id` INTEGER NOT NULL, ADD CONSTRAINT `Reviews_booking_id_foreign_idx` FOREIGN KEY (`booking_id`) REFERENCES `Bookings` (`id`) ON DELETE NO ACTION ON UPDATE CASCADE;","stack":"Error\n    at Query.run (D:\\KHACHSAN3TL\\node_modules\\sequelize\\lib\\dialects\\mysql\\query.js:52:25)\n    at D:\\KHACHSAN3TL\\node_modules\\sequelize\\lib\\sequelize.js:315:28\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at async MySQLQueryInterface.addColumn (D:\\KHACHSAN3TL\\node_modules\\sequelize\\lib\\dialects\\abstract\\query-interface.js:184:12)\n    at async Review.sync (D:\\KHACHSAN3TL\\node_modules\\sequelize\\lib\\model.js:958:11)\n    at async Sequelize.sync (D:\\KHACHSAN3TL\\node_modules\\sequelize\\lib\\sequelize.js:377:9)\n    at async startServer (D:\\KHACHSAN3TL\\server.js:19:13)","table":"bookings","timestamp":"2025-03-18T13:15:14.251Z"}
{"level":"info","message":"Database synchronized","timestamp":"2025-03-18T13:15:14.254Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-03-18T13:15:14.264Z"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-03-18T13:17:11.616Z"}
{"fields":["booking_id"],"index":"Reviews_booking_id_foreign_idx","level":"error","message":"Database sync error: Cannot add or update a child row: a foreign key constraint fails (`khachsan3tl`.`#sql-17c0_1a2`, CONSTRAINT `Reviews_booking_id_foreign_idx` FOREIGN KEY (`booking_id`) REFERENCES `bookings` (`id`) ON UPDATE CASCADE)","name":"SequelizeForeignKeyConstraintError","original":{"code":"ER_NO_REFERENCED_ROW_2","errno":1452,"sql":"ALTER TABLE `Reviews` ADD `booking_id` INTEGER NOT NULL, ADD CONSTRAINT `Reviews_booking_id_foreign_idx` FOREIGN KEY (`booking_id`) REFERENCES `Bookings` (`id`) ON DELETE NO ACTION ON UPDATE CASCADE;","sqlMessage":"Cannot add or update a child row: a foreign key constraint fails (`khachsan3tl`.`#sql-17c0_1a2`, CONSTRAINT `Reviews_booking_id_foreign_idx` FOREIGN KEY (`booking_id`) REFERENCES `bookings` (`id`) ON UPDATE CASCADE)","sqlState":"23000"},"parameters":{},"parent":{"code":"ER_NO_REFERENCED_ROW_2","errno":1452,"sql":"ALTER TABLE `Reviews` ADD `booking_id` INTEGER NOT NULL, ADD CONSTRAINT `Reviews_booking_id_foreign_idx` FOREIGN KEY (`booking_id`) REFERENCES `Bookings` (`id`) ON DELETE NO ACTION ON UPDATE CASCADE;","sqlMessage":"Cannot add or update a child row: a foreign key constraint fails (`khachsan3tl`.`#sql-17c0_1a2`, CONSTRAINT `Reviews_booking_id_foreign_idx` FOREIGN KEY (`booking_id`) REFERENCES `bookings` (`id`) ON UPDATE CASCADE)","sqlState":"23000"},"reltype":"child","sql":"ALTER TABLE `Reviews` ADD `booking_id` INTEGER NOT NULL, ADD CONSTRAINT `Reviews_booking_id_foreign_idx` FOREIGN KEY (`booking_id`) REFERENCES `Bookings` (`id`) ON DELETE NO ACTION ON UPDATE CASCADE;","stack":"Error\n    at Query.run (D:\\KHACHSAN3TL\\node_modules\\sequelize\\lib\\dialects\\mysql\\query.js:52:25)\n    at D:\\KHACHSAN3TL\\node_modules\\sequelize\\lib\\sequelize.js:315:28\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at async MySQLQueryInterface.addColumn (D:\\KHACHSAN3TL\\node_modules\\sequelize\\lib\\dialects\\abstract\\query-interface.js:184:12)\n    at async Review.sync (D:\\KHACHSAN3TL\\node_modules\\sequelize\\lib\\model.js:958:11)\n    at async Sequelize.sync (D:\\KHACHSAN3TL\\node_modules\\sequelize\\lib\\sequelize.js:377:9)\n    at async startServer (D:\\KHACHSAN3TL\\server.js:19:13)","table":"bookings","timestamp":"2025-03-18T13:17:15.583Z"}
{"level":"info","message":"Database synchronized","timestamp":"2025-03-18T13:17:15.585Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-03-18T13:17:15.592Z"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-03-18T13:17:22.533Z"}
{"fields":["booking_id"],"index":"Reviews_booking_id_foreign_idx","level":"error","message":"Database sync error: Cannot add or update a child row: a foreign key constraint fails (`khachsan3tl`.`#sql-17c0_1a5`, CONSTRAINT `Reviews_booking_id_foreign_idx` FOREIGN KEY (`booking_id`) REFERENCES `bookings` (`id`) ON UPDATE CASCADE)","name":"SequelizeForeignKeyConstraintError","original":{"code":"ER_NO_REFERENCED_ROW_2","errno":1452,"sql":"ALTER TABLE `Reviews` ADD `booking_id` INTEGER NOT NULL, ADD CONSTRAINT `Reviews_booking_id_foreign_idx` FOREIGN KEY (`booking_id`) REFERENCES `Bookings` (`id`) ON DELETE NO ACTION ON UPDATE CASCADE;","sqlMessage":"Cannot add or update a child row: a foreign key constraint fails (`khachsan3tl`.`#sql-17c0_1a5`, CONSTRAINT `Reviews_booking_id_foreign_idx` FOREIGN KEY (`booking_id`) REFERENCES `bookings` (`id`) ON UPDATE CASCADE)","sqlState":"23000"},"parameters":{},"parent":{"code":"ER_NO_REFERENCED_ROW_2","errno":1452,"sql":"ALTER TABLE `Reviews` ADD `booking_id` INTEGER NOT NULL, ADD CONSTRAINT `Reviews_booking_id_foreign_idx` FOREIGN KEY (`booking_id`) REFERENCES `Bookings` (`id`) ON DELETE NO ACTION ON UPDATE CASCADE;","sqlMessage":"Cannot add or update a child row: a foreign key constraint fails (`khachsan3tl`.`#sql-17c0_1a5`, CONSTRAINT `Reviews_booking_id_foreign_idx` FOREIGN KEY (`booking_id`) REFERENCES `bookings` (`id`) ON UPDATE CASCADE)","sqlState":"23000"},"reltype":"child","sql":"ALTER TABLE `Reviews` ADD `booking_id` INTEGER NOT NULL, ADD CONSTRAINT `Reviews_booking_id_foreign_idx` FOREIGN KEY (`booking_id`) REFERENCES `Bookings` (`id`) ON DELETE NO ACTION ON UPDATE CASCADE;","stack":"Error\n    at Query.run (D:\\KHACHSAN3TL\\node_modules\\sequelize\\lib\\dialects\\mysql\\query.js:52:25)\n    at D:\\KHACHSAN3TL\\node_modules\\sequelize\\lib\\sequelize.js:315:28\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at async MySQLQueryInterface.addColumn (D:\\KHACHSAN3TL\\node_modules\\sequelize\\lib\\dialects\\abstract\\query-interface.js:184:12)\n    at async Review.sync (D:\\KHACHSAN3TL\\node_modules\\sequelize\\lib\\model.js:958:11)\n    at async Sequelize.sync (D:\\KHACHSAN3TL\\node_modules\\sequelize\\lib\\sequelize.js:377:9)\n    at async startServer (D:\\KHACHSAN3TL\\server.js:19:13)","table":"bookings","timestamp":"2025-03-18T13:17:27.288Z"}
{"level":"info","message":"Database synchronized","timestamp":"2025-03-18T13:17:27.291Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-03-18T13:17:27.298Z"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-03-18T13:19:23.403Z"}
{"fields":["booking_id"],"index":"Reviews_booking_id_foreign_idx","level":"error","message":"Database sync error: Cannot add or update a child row: a foreign key constraint fails (`khachsan3tl`.`#sql-17c0_1a7`, CONSTRAINT `Reviews_booking_id_foreign_idx` FOREIGN KEY (`booking_id`) REFERENCES `bookings` (`id`) ON UPDATE CASCADE)","name":"SequelizeForeignKeyConstraintError","original":{"code":"ER_NO_REFERENCED_ROW_2","errno":1452,"sql":"ALTER TABLE `Reviews` ADD `booking_id` INTEGER NOT NULL, ADD CONSTRAINT `Reviews_booking_id_foreign_idx` FOREIGN KEY (`booking_id`) REFERENCES `Bookings` (`id`) ON DELETE NO ACTION ON UPDATE CASCADE;","sqlMessage":"Cannot add or update a child row: a foreign key constraint fails (`khachsan3tl`.`#sql-17c0_1a7`, CONSTRAINT `Reviews_booking_id_foreign_idx` FOREIGN KEY (`booking_id`) REFERENCES `bookings` (`id`) ON UPDATE CASCADE)","sqlState":"23000"},"parameters":{},"parent":{"code":"ER_NO_REFERENCED_ROW_2","errno":1452,"sql":"ALTER TABLE `Reviews` ADD `booking_id` INTEGER NOT NULL, ADD CONSTRAINT `Reviews_booking_id_foreign_idx` FOREIGN KEY (`booking_id`) REFERENCES `Bookings` (`id`) ON DELETE NO ACTION ON UPDATE CASCADE;","sqlMessage":"Cannot add or update a child row: a foreign key constraint fails (`khachsan3tl`.`#sql-17c0_1a7`, CONSTRAINT `Reviews_booking_id_foreign_idx` FOREIGN KEY (`booking_id`) REFERENCES `bookings` (`id`) ON UPDATE CASCADE)","sqlState":"23000"},"reltype":"child","sql":"ALTER TABLE `Reviews` ADD `booking_id` INTEGER NOT NULL, ADD CONSTRAINT `Reviews_booking_id_foreign_idx` FOREIGN KEY (`booking_id`) REFERENCES `Bookings` (`id`) ON DELETE NO ACTION ON UPDATE CASCADE;","stack":"Error\n    at Query.run (D:\\KHACHSAN3TL\\node_modules\\sequelize\\lib\\dialects\\mysql\\query.js:52:25)\n    at D:\\KHACHSAN3TL\\node_modules\\sequelize\\lib\\sequelize.js:315:28\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at async MySQLQueryInterface.addColumn (D:\\KHACHSAN3TL\\node_modules\\sequelize\\lib\\dialects\\abstract\\query-interface.js:184:12)\n    at async Review.sync (D:\\KHACHSAN3TL\\node_modules\\sequelize\\lib\\model.js:958:11)\n    at async Sequelize.sync (D:\\KHACHSAN3TL\\node_modules\\sequelize\\lib\\sequelize.js:377:9)\n    at async startServer (D:\\KHACHSAN3TL\\server.js:19:13)","table":"bookings","timestamp":"2025-03-18T13:19:26.362Z"}
{"level":"info","message":"Database synchronized","timestamp":"2025-03-18T13:19:26.363Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-03-18T13:19:26.368Z"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-03-18T13:19:36.955Z"}
{"fields":["booking_id"],"index":"Reviews_booking_id_foreign_idx","level":"error","message":"Database sync error: Cannot add or update a child row: a foreign key constraint fails (`khachsan3tl`.`#sql-17c0_1aa`, CONSTRAINT `Reviews_booking_id_foreign_idx` FOREIGN KEY (`booking_id`) REFERENCES `bookings` (`id`) ON UPDATE CASCADE)","name":"SequelizeForeignKeyConstraintError","original":{"code":"ER_NO_REFERENCED_ROW_2","errno":1452,"sql":"ALTER TABLE `Reviews` ADD `booking_id` INTEGER NOT NULL, ADD CONSTRAINT `Reviews_booking_id_foreign_idx` FOREIGN KEY (`booking_id`) REFERENCES `Bookings` (`id`) ON DELETE NO ACTION ON UPDATE CASCADE;","sqlMessage":"Cannot add or update a child row: a foreign key constraint fails (`khachsan3tl`.`#sql-17c0_1aa`, CONSTRAINT `Reviews_booking_id_foreign_idx` FOREIGN KEY (`booking_id`) REFERENCES `bookings` (`id`) ON UPDATE CASCADE)","sqlState":"23000"},"parameters":{},"parent":{"code":"ER_NO_REFERENCED_ROW_2","errno":1452,"sql":"ALTER TABLE `Reviews` ADD `booking_id` INTEGER NOT NULL, ADD CONSTRAINT `Reviews_booking_id_foreign_idx` FOREIGN KEY (`booking_id`) REFERENCES `Bookings` (`id`) ON DELETE NO ACTION ON UPDATE CASCADE;","sqlMessage":"Cannot add or update a child row: a foreign key constraint fails (`khachsan3tl`.`#sql-17c0_1aa`, CONSTRAINT `Reviews_booking_id_foreign_idx` FOREIGN KEY (`booking_id`) REFERENCES `bookings` (`id`) ON UPDATE CASCADE)","sqlState":"23000"},"reltype":"child","sql":"ALTER TABLE `Reviews` ADD `booking_id` INTEGER NOT NULL, ADD CONSTRAINT `Reviews_booking_id_foreign_idx` FOREIGN KEY (`booking_id`) REFERENCES `Bookings` (`id`) ON DELETE NO ACTION ON UPDATE CASCADE;","stack":"Error\n    at Query.run (D:\\KHACHSAN3TL\\node_modules\\sequelize\\lib\\dialects\\mysql\\query.js:52:25)\n    at D:\\KHACHSAN3TL\\node_modules\\sequelize\\lib\\sequelize.js:315:28\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at async MySQLQueryInterface.addColumn (D:\\KHACHSAN3TL\\node_modules\\sequelize\\lib\\dialects\\abstract\\query-interface.js:184:12)\n    at async Review.sync (D:\\KHACHSAN3TL\\node_modules\\sequelize\\lib\\model.js:958:11)\n    at async Sequelize.sync (D:\\KHACHSAN3TL\\node_modules\\sequelize\\lib\\sequelize.js:377:9)\n    at async startServer (D:\\KHACHSAN3TL\\server.js:19:13)","table":"bookings","timestamp":"2025-03-18T13:19:41.403Z"}
{"level":"info","message":"Database synchronized","timestamp":"2025-03-18T13:19:41.405Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-03-18T13:19:41.411Z"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-03-18T13:23:59.329Z"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-03-18T13:24:01.665Z"}
{"fields":["booking_id"],"index":"Reviews_booking_id_foreign_idx","level":"error","message":"Database sync error: Cannot add or update a child row: a foreign key constraint fails (`khachsan3tl`.`#sql-17c0_1b1`, CONSTRAINT `Reviews_booking_id_foreign_idx` FOREIGN KEY (`booking_id`) REFERENCES `bookings` (`id`) ON UPDATE CASCADE)","name":"SequelizeForeignKeyConstraintError","original":{"code":"ER_NO_REFERENCED_ROW_2","errno":1452,"sql":"ALTER TABLE `Reviews` ADD `booking_id` INTEGER NOT NULL, ADD CONSTRAINT `Reviews_booking_id_foreign_idx` FOREIGN KEY (`booking_id`) REFERENCES `Bookings` (`id`) ON DELETE NO ACTION ON UPDATE CASCADE;","sqlMessage":"Cannot add or update a child row: a foreign key constraint fails (`khachsan3tl`.`#sql-17c0_1b1`, CONSTRAINT `Reviews_booking_id_foreign_idx` FOREIGN KEY (`booking_id`) REFERENCES `bookings` (`id`) ON UPDATE CASCADE)","sqlState":"23000"},"parameters":{},"parent":{"code":"ER_NO_REFERENCED_ROW_2","errno":1452,"sql":"ALTER TABLE `Reviews` ADD `booking_id` INTEGER NOT NULL, ADD CONSTRAINT `Reviews_booking_id_foreign_idx` FOREIGN KEY (`booking_id`) REFERENCES `Bookings` (`id`) ON DELETE NO ACTION ON UPDATE CASCADE;","sqlMessage":"Cannot add or update a child row: a foreign key constraint fails (`khachsan3tl`.`#sql-17c0_1b1`, CONSTRAINT `Reviews_booking_id_foreign_idx` FOREIGN KEY (`booking_id`) REFERENCES `bookings` (`id`) ON UPDATE CASCADE)","sqlState":"23000"},"reltype":"child","sql":"ALTER TABLE `Reviews` ADD `booking_id` INTEGER NOT NULL, ADD CONSTRAINT `Reviews_booking_id_foreign_idx` FOREIGN KEY (`booking_id`) REFERENCES `Bookings` (`id`) ON DELETE NO ACTION ON UPDATE CASCADE;","stack":"Error\n    at Query.run (D:\\KHACHSAN3TL\\node_modules\\sequelize\\lib\\dialects\\mysql\\query.js:52:25)\n    at D:\\KHACHSAN3TL\\node_modules\\sequelize\\lib\\sequelize.js:315:28\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at async MySQLQueryInterface.addColumn (D:\\KHACHSAN3TL\\node_modules\\sequelize\\lib\\dialects\\abstract\\query-interface.js:184:12)\n    at async Review.sync (D:\\KHACHSAN3TL\\node_modules\\sequelize\\lib\\model.js:958:11)\n    at async Sequelize.sync (D:\\KHACHSAN3TL\\node_modules\\sequelize\\lib\\sequelize.js:377:9)\n    at async startServer (D:\\KHACHSAN3TL\\server.js:19:13)","table":"bookings","timestamp":"2025-03-18T13:24:07.407Z"}
{"level":"info","message":"Database synchronized","timestamp":"2025-03-18T13:24:07.410Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-03-18T13:24:07.417Z"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-03-18T13:24:09.993Z"}
{"fields":["booking_id"],"index":"Reviews_booking_id_foreign_idx","level":"error","message":"Database sync error: Cannot add or update a child row: a foreign key constraint fails (`khachsan3tl`.`#sql-17c0_1b4`, CONSTRAINT `Reviews_booking_id_foreign_idx` FOREIGN KEY (`booking_id`) REFERENCES `bookings` (`id`) ON UPDATE CASCADE)","name":"SequelizeForeignKeyConstraintError","original":{"code":"ER_NO_REFERENCED_ROW_2","errno":1452,"sql":"ALTER TABLE `Reviews` ADD `booking_id` INTEGER NOT NULL, ADD CONSTRAINT `Reviews_booking_id_foreign_idx` FOREIGN KEY (`booking_id`) REFERENCES `Bookings` (`id`) ON DELETE NO ACTION ON UPDATE CASCADE;","sqlMessage":"Cannot add or update a child row: a foreign key constraint fails (`khachsan3tl`.`#sql-17c0_1b4`, CONSTRAINT `Reviews_booking_id_foreign_idx` FOREIGN KEY (`booking_id`) REFERENCES `bookings` (`id`) ON UPDATE CASCADE)","sqlState":"23000"},"parameters":{},"parent":{"code":"ER_NO_REFERENCED_ROW_2","errno":1452,"sql":"ALTER TABLE `Reviews` ADD `booking_id` INTEGER NOT NULL, ADD CONSTRAINT `Reviews_booking_id_foreign_idx` FOREIGN KEY (`booking_id`) REFERENCES `Bookings` (`id`) ON DELETE NO ACTION ON UPDATE CASCADE;","sqlMessage":"Cannot add or update a child row: a foreign key constraint fails (`khachsan3tl`.`#sql-17c0_1b4`, CONSTRAINT `Reviews_booking_id_foreign_idx` FOREIGN KEY (`booking_id`) REFERENCES `bookings` (`id`) ON UPDATE CASCADE)","sqlState":"23000"},"reltype":"child","sql":"ALTER TABLE `Reviews` ADD `booking_id` INTEGER NOT NULL, ADD CONSTRAINT `Reviews_booking_id_foreign_idx` FOREIGN KEY (`booking_id`) REFERENCES `Bookings` (`id`) ON DELETE NO ACTION ON UPDATE CASCADE;","stack":"Error\n    at Query.run (D:\\KHACHSAN3TL\\node_modules\\sequelize\\lib\\dialects\\mysql\\query.js:52:25)\n    at D:\\KHACHSAN3TL\\node_modules\\sequelize\\lib\\sequelize.js:315:28\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at async MySQLQueryInterface.addColumn (D:\\KHACHSAN3TL\\node_modules\\sequelize\\lib\\dialects\\abstract\\query-interface.js:184:12)\n    at async Review.sync (D:\\KHACHSAN3TL\\node_modules\\sequelize\\lib\\model.js:958:11)\n    at async Sequelize.sync (D:\\KHACHSAN3TL\\node_modules\\sequelize\\lib\\sequelize.js:377:9)\n    at async startServer (D:\\KHACHSAN3TL\\server.js:19:13)","table":"bookings","timestamp":"2025-03-18T13:24:14.973Z"}
{"level":"info","message":"Database synchronized","timestamp":"2025-03-18T13:24:14.975Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-03-18T13:24:14.982Z"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-03-18T13:24:27.819Z"}
{"fields":["booking_id"],"index":"Reviews_booking_id_foreign_idx","level":"error","message":"Database sync error: Cannot add or update a child row: a foreign key constraint fails (`khachsan3tl`.`#sql-17c0_1b8`, CONSTRAINT `Reviews_booking_id_foreign_idx` FOREIGN KEY (`booking_id`) REFERENCES `bookings` (`id`) ON UPDATE CASCADE)","name":"SequelizeForeignKeyConstraintError","original":{"code":"ER_NO_REFERENCED_ROW_2","errno":1452,"sql":"ALTER TABLE `Reviews` ADD `booking_id` INTEGER NOT NULL, ADD CONSTRAINT `Reviews_booking_id_foreign_idx` FOREIGN KEY (`booking_id`) REFERENCES `Bookings` (`id`) ON DELETE NO ACTION ON UPDATE CASCADE;","sqlMessage":"Cannot add or update a child row: a foreign key constraint fails (`khachsan3tl`.`#sql-17c0_1b8`, CONSTRAINT `Reviews_booking_id_foreign_idx` FOREIGN KEY (`booking_id`) REFERENCES `bookings` (`id`) ON UPDATE CASCADE)","sqlState":"23000"},"parameters":{},"parent":{"code":"ER_NO_REFERENCED_ROW_2","errno":1452,"sql":"ALTER TABLE `Reviews` ADD `booking_id` INTEGER NOT NULL, ADD CONSTRAINT `Reviews_booking_id_foreign_idx` FOREIGN KEY (`booking_id`) REFERENCES `Bookings` (`id`) ON DELETE NO ACTION ON UPDATE CASCADE;","sqlMessage":"Cannot add or update a child row: a foreign key constraint fails (`khachsan3tl`.`#sql-17c0_1b8`, CONSTRAINT `Reviews_booking_id_foreign_idx` FOREIGN KEY (`booking_id`) REFERENCES `bookings` (`id`) ON UPDATE CASCADE)","sqlState":"23000"},"reltype":"child","sql":"ALTER TABLE `Reviews` ADD `booking_id` INTEGER NOT NULL, ADD CONSTRAINT `Reviews_booking_id_foreign_idx` FOREIGN KEY (`booking_id`) REFERENCES `Bookings` (`id`) ON DELETE NO ACTION ON UPDATE CASCADE;","stack":"Error\n    at Query.run (D:\\KHACHSAN3TL\\node_modules\\sequelize\\lib\\dialects\\mysql\\query.js:52:25)\n    at D:\\KHACHSAN3TL\\node_modules\\sequelize\\lib\\sequelize.js:315:28\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at async MySQLQueryInterface.addColumn (D:\\KHACHSAN3TL\\node_modules\\sequelize\\lib\\dialects\\abstract\\query-interface.js:184:12)\n    at async Review.sync (D:\\KHACHSAN3TL\\node_modules\\sequelize\\lib\\model.js:958:11)\n    at async Sequelize.sync (D:\\KHACHSAN3TL\\node_modules\\sequelize\\lib\\sequelize.js:377:9)\n    at async startServer (D:\\KHACHSAN3TL\\server.js:19:13)","table":"bookings","timestamp":"2025-03-18T13:24:31.315Z"}
{"level":"info","message":"Database synchronized","timestamp":"2025-03-18T13:24:31.317Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-03-18T13:24:31.320Z"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-03-18T13:26:41.634Z"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-03-18T13:26:49.988Z"}
{"level":"error","message":"Database sync error: Column 'user_id' cannot be NOT NULL: needed in a foreign key constraint 'reviews_ibfk_3' SET NULL","name":"SequelizeDatabaseError","original":{"code":"ER_FK_COLUMN_NOT_NULL","errno":1830,"sql":"ALTER TABLE `reviews` ADD FOREIGN KEY (`user_id`) REFERENCES `users` (`id`) ON DELETE SET NULL ON UPDATE CASCADE;","sqlMessage":"Column 'user_id' cannot be NOT NULL: needed in a foreign key constraint 'reviews_ibfk_3' SET NULL","sqlState":"HY000"},"parameters":{},"parent":{"code":"ER_FK_COLUMN_NOT_NULL","errno":1830,"sql":"ALTER TABLE `reviews` ADD FOREIGN KEY (`user_id`) REFERENCES `users` (`id`) ON DELETE SET NULL ON UPDATE CASCADE;","sqlMessage":"Column 'user_id' cannot be NOT NULL: needed in a foreign key constraint 'reviews_ibfk_3' SET NULL","sqlState":"HY000"},"sql":"ALTER TABLE `reviews` ADD FOREIGN KEY (`user_id`) REFERENCES `users` (`id`) ON DELETE SET NULL ON UPDATE CASCADE;","stack":"Error\n    at Query.run (D:\\KHACHSAN3TL\\node_modules\\sequelize\\lib\\dialects\\mysql\\query.js:52:25)\n    at D:\\KHACHSAN3TL\\node_modules\\sequelize\\lib\\sequelize.js:315:28\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at async Review.sync (D:\\KHACHSAN3TL\\node_modules\\sequelize\\lib\\model.js:984:11)\n    at async Sequelize.sync (D:\\KHACHSAN3TL\\node_modules\\sequelize\\lib\\sequelize.js:377:9)\n    at async startServer (D:\\KHACHSAN3TL\\server.js:19:13)","timestamp":"2025-03-18T13:26:55.604Z"}
{"level":"info","message":"Database synchronized","timestamp":"2025-03-18T13:26:55.606Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-03-18T13:26:55.613Z"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-03-18T13:27:00.174Z"}
{"level":"error","message":"Database sync error: Column 'user_id' cannot be NOT NULL: needed in a foreign key constraint 'reviews_ibfk_3' SET NULL","name":"SequelizeDatabaseError","original":{"code":"ER_FK_COLUMN_NOT_NULL","errno":1830,"sql":"ALTER TABLE `reviews` ADD FOREIGN KEY (`user_id`) REFERENCES `users` (`id`) ON DELETE SET NULL ON UPDATE CASCADE;","sqlMessage":"Column 'user_id' cannot be NOT NULL: needed in a foreign key constraint 'reviews_ibfk_3' SET NULL","sqlState":"HY000"},"parameters":{},"parent":{"code":"ER_FK_COLUMN_NOT_NULL","errno":1830,"sql":"ALTER TABLE `reviews` ADD FOREIGN KEY (`user_id`) REFERENCES `users` (`id`) ON DELETE SET NULL ON UPDATE CASCADE;","sqlMessage":"Column 'user_id' cannot be NOT NULL: needed in a foreign key constraint 'reviews_ibfk_3' SET NULL","sqlState":"HY000"},"sql":"ALTER TABLE `reviews` ADD FOREIGN KEY (`user_id`) REFERENCES `users` (`id`) ON DELETE SET NULL ON UPDATE CASCADE;","stack":"Error\n    at Query.run (D:\\KHACHSAN3TL\\node_modules\\sequelize\\lib\\dialects\\mysql\\query.js:52:25)\n    at D:\\KHACHSAN3TL\\node_modules\\sequelize\\lib\\sequelize.js:315:28\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at async Review.sync (D:\\KHACHSAN3TL\\node_modules\\sequelize\\lib\\model.js:984:11)\n    at async Sequelize.sync (D:\\KHACHSAN3TL\\node_modules\\sequelize\\lib\\sequelize.js:377:9)\n    at async startServer (D:\\KHACHSAN3TL\\server.js:19:13)","timestamp":"2025-03-18T13:27:06.371Z"}
{"level":"info","message":"Database synchronized","timestamp":"2025-03-18T13:27:06.373Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-03-18T13:27:06.379Z"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-03-18T13:27:11.637Z"}
{"level":"error","message":"Database sync error: Column 'user_id' cannot be NOT NULL: needed in a foreign key constraint 'reviews_ibfk_3' SET NULL","name":"SequelizeDatabaseError","original":{"code":"ER_FK_COLUMN_NOT_NULL","errno":1830,"sql":"ALTER TABLE `reviews` ADD FOREIGN KEY (`user_id`) REFERENCES `users` (`id`) ON DELETE SET NULL ON UPDATE CASCADE;","sqlMessage":"Column 'user_id' cannot be NOT NULL: needed in a foreign key constraint 'reviews_ibfk_3' SET NULL","sqlState":"HY000"},"parameters":{},"parent":{"code":"ER_FK_COLUMN_NOT_NULL","errno":1830,"sql":"ALTER TABLE `reviews` ADD FOREIGN KEY (`user_id`) REFERENCES `users` (`id`) ON DELETE SET NULL ON UPDATE CASCADE;","sqlMessage":"Column 'user_id' cannot be NOT NULL: needed in a foreign key constraint 'reviews_ibfk_3' SET NULL","sqlState":"HY000"},"sql":"ALTER TABLE `reviews` ADD FOREIGN KEY (`user_id`) REFERENCES `users` (`id`) ON DELETE SET NULL ON UPDATE CASCADE;","stack":"Error\n    at Query.run (D:\\KHACHSAN3TL\\node_modules\\sequelize\\lib\\dialects\\mysql\\query.js:52:25)\n    at D:\\KHACHSAN3TL\\node_modules\\sequelize\\lib\\sequelize.js:315:28\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at async Review.sync (D:\\KHACHSAN3TL\\node_modules\\sequelize\\lib\\model.js:984:11)\n    at async Sequelize.sync (D:\\KHACHSAN3TL\\node_modules\\sequelize\\lib\\sequelize.js:377:9)\n    at async startServer (D:\\KHACHSAN3TL\\server.js:19:13)","timestamp":"2025-03-18T13:27:17.103Z"}
{"level":"info","message":"Database synchronized","timestamp":"2025-03-18T13:27:17.104Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-03-18T13:27:17.108Z"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-03-18T13:27:24.642Z"}
{"level":"error","message":"Database sync error: Column 'user_id' cannot be NOT NULL: needed in a foreign key constraint 'reviews_ibfk_3' SET NULL","name":"SequelizeDatabaseError","original":{"code":"ER_FK_COLUMN_NOT_NULL","errno":1830,"sql":"ALTER TABLE `reviews` ADD FOREIGN KEY (`user_id`) REFERENCES `users` (`id`) ON DELETE SET NULL ON UPDATE CASCADE;","sqlMessage":"Column 'user_id' cannot be NOT NULL: needed in a foreign key constraint 'reviews_ibfk_3' SET NULL","sqlState":"HY000"},"parameters":{},"parent":{"code":"ER_FK_COLUMN_NOT_NULL","errno":1830,"sql":"ALTER TABLE `reviews` ADD FOREIGN KEY (`user_id`) REFERENCES `users` (`id`) ON DELETE SET NULL ON UPDATE CASCADE;","sqlMessage":"Column 'user_id' cannot be NOT NULL: needed in a foreign key constraint 'reviews_ibfk_3' SET NULL","sqlState":"HY000"},"sql":"ALTER TABLE `reviews` ADD FOREIGN KEY (`user_id`) REFERENCES `users` (`id`) ON DELETE SET NULL ON UPDATE CASCADE;","stack":"Error\n    at Query.run (D:\\KHACHSAN3TL\\node_modules\\sequelize\\lib\\dialects\\mysql\\query.js:52:25)\n    at D:\\KHACHSAN3TL\\node_modules\\sequelize\\lib\\sequelize.js:315:28\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at async Review.sync (D:\\KHACHSAN3TL\\node_modules\\sequelize\\lib\\model.js:984:11)\n    at async Sequelize.sync (D:\\KHACHSAN3TL\\node_modules\\sequelize\\lib\\sequelize.js:377:9)\n    at async startServer (D:\\KHACHSAN3TL\\server.js:19:13)","timestamp":"2025-03-18T13:27:29.616Z"}
{"level":"info","message":"Database synchronized","timestamp":"2025-03-18T13:27:29.617Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-03-18T13:27:29.619Z"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-03-18T13:29:17.243Z"}
{"level":"error","message":"Database sync error: Column 'user_id' cannot be NOT NULL: needed in a foreign key constraint 'reviews_ibfk_3' SET NULL","name":"SequelizeDatabaseError","original":{"code":"ER_FK_COLUMN_NOT_NULL","errno":1830,"sql":"ALTER TABLE `reviews` ADD FOREIGN KEY (`user_id`) REFERENCES `users` (`id`) ON DELETE SET NULL ON UPDATE CASCADE;","sqlMessage":"Column 'user_id' cannot be NOT NULL: needed in a foreign key constraint 'reviews_ibfk_3' SET NULL","sqlState":"HY000"},"parameters":{},"parent":{"code":"ER_FK_COLUMN_NOT_NULL","errno":1830,"sql":"ALTER TABLE `reviews` ADD FOREIGN KEY (`user_id`) REFERENCES `users` (`id`) ON DELETE SET NULL ON UPDATE CASCADE;","sqlMessage":"Column 'user_id' cannot be NOT NULL: needed in a foreign key constraint 'reviews_ibfk_3' SET NULL","sqlState":"HY000"},"sql":"ALTER TABLE `reviews` ADD FOREIGN KEY (`user_id`) REFERENCES `users` (`id`) ON DELETE SET NULL ON UPDATE CASCADE;","stack":"Error\n    at Query.run (D:\\KHACHSAN3TL\\node_modules\\sequelize\\lib\\dialects\\mysql\\query.js:52:25)\n    at D:\\KHACHSAN3TL\\node_modules\\sequelize\\lib\\sequelize.js:315:28\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at async Review.sync (D:\\KHACHSAN3TL\\node_modules\\sequelize\\lib\\model.js:984:11)\n    at async Sequelize.sync (D:\\KHACHSAN3TL\\node_modules\\sequelize\\lib\\sequelize.js:377:9)\n    at async startServer (D:\\KHACHSAN3TL\\server.js:19:13)","timestamp":"2025-03-18T13:29:21.978Z"}
{"level":"info","message":"Database synchronized","timestamp":"2025-03-18T13:29:21.979Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-03-18T13:29:21.984Z"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-03-18T15:40:42.703Z"}
{"level":"error","message":"Database sync error: Column 'user_id' cannot be NOT NULL: needed in a foreign key constraint 'reviews_ibfk_3' SET NULL","name":"SequelizeDatabaseError","original":{"code":"ER_FK_COLUMN_NOT_NULL","errno":1830,"sql":"ALTER TABLE `reviews` ADD FOREIGN KEY (`user_id`) REFERENCES `users` (`id`) ON DELETE SET NULL ON UPDATE CASCADE;","sqlMessage":"Column 'user_id' cannot be NOT NULL: needed in a foreign key constraint 'reviews_ibfk_3' SET NULL","sqlState":"HY000"},"parameters":{},"parent":{"code":"ER_FK_COLUMN_NOT_NULL","errno":1830,"sql":"ALTER TABLE `reviews` ADD FOREIGN KEY (`user_id`) REFERENCES `users` (`id`) ON DELETE SET NULL ON UPDATE CASCADE;","sqlMessage":"Column 'user_id' cannot be NOT NULL: needed in a foreign key constraint 'reviews_ibfk_3' SET NULL","sqlState":"HY000"},"sql":"ALTER TABLE `reviews` ADD FOREIGN KEY (`user_id`) REFERENCES `users` (`id`) ON DELETE SET NULL ON UPDATE CASCADE;","stack":"Error\n    at Query.run (D:\\KHACHSAN3TL\\node_modules\\sequelize\\lib\\dialects\\mysql\\query.js:52:25)\n    at D:\\KHACHSAN3TL\\node_modules\\sequelize\\lib\\sequelize.js:315:28\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at async Review.sync (D:\\KHACHSAN3TL\\node_modules\\sequelize\\lib\\model.js:984:11)\n    at async Sequelize.sync (D:\\KHACHSAN3TL\\node_modules\\sequelize\\lib\\sequelize.js:377:9)\n    at async startServer (D:\\KHACHSAN3TL\\server.js:19:13)","timestamp":"2025-03-18T15:40:46.992Z"}
{"level":"info","message":"Database synchronized","timestamp":"2025-03-18T15:40:46.994Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-03-18T15:40:46.997Z"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-03-18T15:44:35.088Z"}
{"level":"error","message":"Database sync error: Column 'user_id' cannot be NOT NULL: needed in a foreign key constraint 'reviews_ibfk_3' SET NULL","name":"SequelizeDatabaseError","original":{"code":"ER_FK_COLUMN_NOT_NULL","errno":1830,"sql":"ALTER TABLE `reviews` ADD FOREIGN KEY (`user_id`) REFERENCES `users` (`id`) ON DELETE SET NULL ON UPDATE CASCADE;","sqlMessage":"Column 'user_id' cannot be NOT NULL: needed in a foreign key constraint 'reviews_ibfk_3' SET NULL","sqlState":"HY000"},"parameters":{},"parent":{"code":"ER_FK_COLUMN_NOT_NULL","errno":1830,"sql":"ALTER TABLE `reviews` ADD FOREIGN KEY (`user_id`) REFERENCES `users` (`id`) ON DELETE SET NULL ON UPDATE CASCADE;","sqlMessage":"Column 'user_id' cannot be NOT NULL: needed in a foreign key constraint 'reviews_ibfk_3' SET NULL","sqlState":"HY000"},"sql":"ALTER TABLE `reviews` ADD FOREIGN KEY (`user_id`) REFERENCES `users` (`id`) ON DELETE SET NULL ON UPDATE CASCADE;","stack":"Error\n    at Query.run (D:\\KHACHSAN3TL\\node_modules\\sequelize\\lib\\dialects\\mysql\\query.js:52:25)\n    at D:\\KHACHSAN3TL\\node_modules\\sequelize\\lib\\sequelize.js:315:28\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at async Review.sync (D:\\KHACHSAN3TL\\node_modules\\sequelize\\lib\\model.js:984:11)\n    at async Sequelize.sync (D:\\KHACHSAN3TL\\node_modules\\sequelize\\lib\\sequelize.js:377:9)\n    at async startServer (D:\\KHACHSAN3TL\\server.js:19:13)","timestamp":"2025-03-18T15:44:41.270Z"}
{"level":"info","message":"Database synchronized","timestamp":"2025-03-18T15:44:41.271Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-03-18T15:44:41.275Z"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-03-18T15:48:21.328Z"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-03-18T15:48:29.476Z"}
{"level":"error","message":"Database sync error: Column 'user_id' cannot be NOT NULL: needed in a foreign key constraint 'reviews_ibfk_3' SET NULL","name":"SequelizeDatabaseError","original":{"code":"ER_FK_COLUMN_NOT_NULL","errno":1830,"sql":"ALTER TABLE `reviews` ADD FOREIGN KEY (`user_id`) REFERENCES `users` (`id`) ON DELETE SET NULL ON UPDATE CASCADE;","sqlMessage":"Column 'user_id' cannot be NOT NULL: needed in a foreign key constraint 'reviews_ibfk_3' SET NULL","sqlState":"HY000"},"parameters":{},"parent":{"code":"ER_FK_COLUMN_NOT_NULL","errno":1830,"sql":"ALTER TABLE `reviews` ADD FOREIGN KEY (`user_id`) REFERENCES `users` (`id`) ON DELETE SET NULL ON UPDATE CASCADE;","sqlMessage":"Column 'user_id' cannot be NOT NULL: needed in a foreign key constraint 'reviews_ibfk_3' SET NULL","sqlState":"HY000"},"sql":"ALTER TABLE `reviews` ADD FOREIGN KEY (`user_id`) REFERENCES `users` (`id`) ON DELETE SET NULL ON UPDATE CASCADE;","stack":"Error\n    at Query.run (D:\\KHACHSAN3TL\\node_modules\\sequelize\\lib\\dialects\\mysql\\query.js:52:25)\n    at D:\\KHACHSAN3TL\\node_modules\\sequelize\\lib\\sequelize.js:315:28\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at async Review.sync (D:\\KHACHSAN3TL\\node_modules\\sequelize\\lib\\model.js:984:11)\n    at async Sequelize.sync (D:\\KHACHSAN3TL\\node_modules\\sequelize\\lib\\sequelize.js:377:9)\n    at async startServer (D:\\KHACHSAN3TL\\server.js:19:13)","timestamp":"2025-03-18T15:48:35.735Z"}
{"level":"info","message":"Database synchronized","timestamp":"2025-03-18T15:48:35.737Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-03-18T15:48:35.741Z"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-03-18T15:48:44.320Z"}
{"level":"error","message":"Database sync error: Column 'user_id' cannot be NOT NULL: needed in a foreign key constraint 'reviews_ibfk_3' SET NULL","name":"SequelizeDatabaseError","original":{"code":"ER_FK_COLUMN_NOT_NULL","errno":1830,"sql":"ALTER TABLE `reviews` ADD FOREIGN KEY (`user_id`) REFERENCES `users` (`id`) ON DELETE SET NULL ON UPDATE CASCADE;","sqlMessage":"Column 'user_id' cannot be NOT NULL: needed in a foreign key constraint 'reviews_ibfk_3' SET NULL","sqlState":"HY000"},"parameters":{},"parent":{"code":"ER_FK_COLUMN_NOT_NULL","errno":1830,"sql":"ALTER TABLE `reviews` ADD FOREIGN KEY (`user_id`) REFERENCES `users` (`id`) ON DELETE SET NULL ON UPDATE CASCADE;","sqlMessage":"Column 'user_id' cannot be NOT NULL: needed in a foreign key constraint 'reviews_ibfk_3' SET NULL","sqlState":"HY000"},"sql":"ALTER TABLE `reviews` ADD FOREIGN KEY (`user_id`) REFERENCES `users` (`id`) ON DELETE SET NULL ON UPDATE CASCADE;","stack":"Error\n    at Query.run (D:\\KHACHSAN3TL\\node_modules\\sequelize\\lib\\dialects\\mysql\\query.js:52:25)\n    at D:\\KHACHSAN3TL\\node_modules\\sequelize\\lib\\sequelize.js:315:28\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at async Review.sync (D:\\KHACHSAN3TL\\node_modules\\sequelize\\lib\\model.js:984:11)\n    at async Sequelize.sync (D:\\KHACHSAN3TL\\node_modules\\sequelize\\lib\\sequelize.js:377:9)\n    at async startServer (D:\\KHACHSAN3TL\\server.js:19:13)","timestamp":"2025-03-18T15:48:52.127Z"}
{"level":"info","message":"Database synchronized","timestamp":"2025-03-18T15:48:52.128Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-03-18T15:48:52.131Z"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-03-18T15:56:49.541Z"}
{"level":"error","message":"Database sync error: Column 'user_id' cannot be NOT NULL: needed in a foreign key constraint 'reviews_ibfk_3' SET NULL","name":"SequelizeDatabaseError","original":{"code":"ER_FK_COLUMN_NOT_NULL","errno":1830,"sql":"ALTER TABLE `reviews` ADD FOREIGN KEY (`user_id`) REFERENCES `users` (`id`) ON DELETE SET NULL ON UPDATE CASCADE;","sqlMessage":"Column 'user_id' cannot be NOT NULL: needed in a foreign key constraint 'reviews_ibfk_3' SET NULL","sqlState":"HY000"},"parameters":{},"parent":{"code":"ER_FK_COLUMN_NOT_NULL","errno":1830,"sql":"ALTER TABLE `reviews` ADD FOREIGN KEY (`user_id`) REFERENCES `users` (`id`) ON DELETE SET NULL ON UPDATE CASCADE;","sqlMessage":"Column 'user_id' cannot be NOT NULL: needed in a foreign key constraint 'reviews_ibfk_3' SET NULL","sqlState":"HY000"},"sql":"ALTER TABLE `reviews` ADD FOREIGN KEY (`user_id`) REFERENCES `users` (`id`) ON DELETE SET NULL ON UPDATE CASCADE;","stack":"Error\n    at Query.run (D:\\KHACHSAN3TL\\node_modules\\sequelize\\lib\\dialects\\mysql\\query.js:52:25)\n    at D:\\KHACHSAN3TL\\node_modules\\sequelize\\lib\\sequelize.js:315:28\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at async Review.sync (D:\\KHACHSAN3TL\\node_modules\\sequelize\\lib\\model.js:984:11)\n    at async Sequelize.sync (D:\\KHACHSAN3TL\\node_modules\\sequelize\\lib\\sequelize.js:377:9)\n    at async startServer (D:\\KHACHSAN3TL\\server.js:19:13)","timestamp":"2025-03-18T15:56:55.272Z"}
{"level":"info","message":"Database synchronized","timestamp":"2025-03-18T15:56:55.273Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-03-18T15:56:55.279Z"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-03-18T16:02:08.345Z"}
{"level":"error","message":"Database sync error: Column 'user_id' cannot be NOT NULL: needed in a foreign key constraint 'reviews_ibfk_3' SET NULL","name":"SequelizeDatabaseError","original":{"code":"ER_FK_COLUMN_NOT_NULL","errno":1830,"sql":"ALTER TABLE `reviews` ADD FOREIGN KEY (`user_id`) REFERENCES `users` (`id`) ON DELETE SET NULL ON UPDATE CASCADE;","sqlMessage":"Column 'user_id' cannot be NOT NULL: needed in a foreign key constraint 'reviews_ibfk_3' SET NULL","sqlState":"HY000"},"parameters":{},"parent":{"code":"ER_FK_COLUMN_NOT_NULL","errno":1830,"sql":"ALTER TABLE `reviews` ADD FOREIGN KEY (`user_id`) REFERENCES `users` (`id`) ON DELETE SET NULL ON UPDATE CASCADE;","sqlMessage":"Column 'user_id' cannot be NOT NULL: needed in a foreign key constraint 'reviews_ibfk_3' SET NULL","sqlState":"HY000"},"sql":"ALTER TABLE `reviews` ADD FOREIGN KEY (`user_id`) REFERENCES `users` (`id`) ON DELETE SET NULL ON UPDATE CASCADE;","stack":"Error\n    at Query.run (D:\\KHACHSAN3TL\\node_modules\\sequelize\\lib\\dialects\\mysql\\query.js:52:25)\n    at D:\\KHACHSAN3TL\\node_modules\\sequelize\\lib\\sequelize.js:315:28\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at async Review.sync (D:\\KHACHSAN3TL\\node_modules\\sequelize\\lib\\model.js:984:11)\n    at async Sequelize.sync (D:\\KHACHSAN3TL\\node_modules\\sequelize\\lib\\sequelize.js:377:9)\n    at async startServer (D:\\KHACHSAN3TL\\server.js:19:13)","timestamp":"2025-03-18T16:02:15.441Z"}
{"level":"info","message":"Database synchronized","timestamp":"2025-03-18T16:02:15.442Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-03-18T16:02:15.448Z"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-03-18T16:02:25.268Z"}
{"level":"error","message":"Database sync error: Column 'user_id' cannot be NOT NULL: needed in a foreign key constraint 'reviews_ibfk_3' SET NULL","name":"SequelizeDatabaseError","original":{"code":"ER_FK_COLUMN_NOT_NULL","errno":1830,"sql":"ALTER TABLE `reviews` ADD FOREIGN KEY (`user_id`) REFERENCES `users` (`id`) ON DELETE SET NULL ON UPDATE CASCADE;","sqlMessage":"Column 'user_id' cannot be NOT NULL: needed in a foreign key constraint 'reviews_ibfk_3' SET NULL","sqlState":"HY000"},"parameters":{},"parent":{"code":"ER_FK_COLUMN_NOT_NULL","errno":1830,"sql":"ALTER TABLE `reviews` ADD FOREIGN KEY (`user_id`) REFERENCES `users` (`id`) ON DELETE SET NULL ON UPDATE CASCADE;","sqlMessage":"Column 'user_id' cannot be NOT NULL: needed in a foreign key constraint 'reviews_ibfk_3' SET NULL","sqlState":"HY000"},"sql":"ALTER TABLE `reviews` ADD FOREIGN KEY (`user_id`) REFERENCES `users` (`id`) ON DELETE SET NULL ON UPDATE CASCADE;","stack":"Error\n    at Query.run (D:\\KHACHSAN3TL\\node_modules\\sequelize\\lib\\dialects\\mysql\\query.js:52:25)\n    at D:\\KHACHSAN3TL\\node_modules\\sequelize\\lib\\sequelize.js:315:28\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at async Review.sync (D:\\KHACHSAN3TL\\node_modules\\sequelize\\lib\\model.js:984:11)\n    at async Sequelize.sync (D:\\KHACHSAN3TL\\node_modules\\sequelize\\lib\\sequelize.js:377:9)\n    at async startServer (D:\\KHACHSAN3TL\\server.js:19:13)","timestamp":"2025-03-18T16:02:31.688Z"}
{"level":"info","message":"Database synchronized","timestamp":"2025-03-18T16:02:31.689Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-03-18T16:02:31.693Z"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-03-18T16:04:30.043Z"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-03-18T16:04:38.235Z"}
{"level":"error","message":"Database sync error: Column 'user_id' cannot be NOT NULL: needed in a foreign key constraint 'reviews_ibfk_3' SET NULL","name":"SequelizeDatabaseError","original":{"code":"ER_FK_COLUMN_NOT_NULL","errno":1830,"sql":"ALTER TABLE `reviews` ADD FOREIGN KEY (`user_id`) REFERENCES `users` (`id`) ON DELETE SET NULL ON UPDATE CASCADE;","sqlMessage":"Column 'user_id' cannot be NOT NULL: needed in a foreign key constraint 'reviews_ibfk_3' SET NULL","sqlState":"HY000"},"parameters":{},"parent":{"code":"ER_FK_COLUMN_NOT_NULL","errno":1830,"sql":"ALTER TABLE `reviews` ADD FOREIGN KEY (`user_id`) REFERENCES `users` (`id`) ON DELETE SET NULL ON UPDATE CASCADE;","sqlMessage":"Column 'user_id' cannot be NOT NULL: needed in a foreign key constraint 'reviews_ibfk_3' SET NULL","sqlState":"HY000"},"sql":"ALTER TABLE `reviews` ADD FOREIGN KEY (`user_id`) REFERENCES `users` (`id`) ON DELETE SET NULL ON UPDATE CASCADE;","stack":"Error\n    at Query.run (D:\\KHACHSAN3TL\\node_modules\\sequelize\\lib\\dialects\\mysql\\query.js:52:25)\n    at D:\\KHACHSAN3TL\\node_modules\\sequelize\\lib\\sequelize.js:315:28\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at async Review.sync (D:\\KHACHSAN3TL\\node_modules\\sequelize\\lib\\model.js:984:11)\n    at async Sequelize.sync (D:\\KHACHSAN3TL\\node_modules\\sequelize\\lib\\sequelize.js:377:9)\n    at async startServer (D:\\KHACHSAN3TL\\server.js:19:13)","timestamp":"2025-03-18T16:04:45.926Z"}
{"level":"info","message":"Database synchronized","timestamp":"2025-03-18T16:04:45.930Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-03-18T16:04:45.941Z"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-03-18T16:10:25.148Z"}
{"level":"error","message":"Database sync error: Column 'user_id' cannot be NOT NULL: needed in a foreign key constraint 'reviews_ibfk_3' SET NULL","name":"SequelizeDatabaseError","original":{"code":"ER_FK_COLUMN_NOT_NULL","errno":1830,"sql":"ALTER TABLE `reviews` ADD FOREIGN KEY (`user_id`) REFERENCES `users` (`id`) ON DELETE SET NULL ON UPDATE CASCADE;","sqlMessage":"Column 'user_id' cannot be NOT NULL: needed in a foreign key constraint 'reviews_ibfk_3' SET NULL","sqlState":"HY000"},"parameters":{},"parent":{"code":"ER_FK_COLUMN_NOT_NULL","errno":1830,"sql":"ALTER TABLE `reviews` ADD FOREIGN KEY (`user_id`) REFERENCES `users` (`id`) ON DELETE SET NULL ON UPDATE CASCADE;","sqlMessage":"Column 'user_id' cannot be NOT NULL: needed in a foreign key constraint 'reviews_ibfk_3' SET NULL","sqlState":"HY000"},"sql":"ALTER TABLE `reviews` ADD FOREIGN KEY (`user_id`) REFERENCES `users` (`id`) ON DELETE SET NULL ON UPDATE CASCADE;","stack":"Error\n    at Query.run (D:\\KHACHSAN3TL\\node_modules\\sequelize\\lib\\dialects\\mysql\\query.js:52:25)\n    at D:\\KHACHSAN3TL\\node_modules\\sequelize\\lib\\sequelize.js:315:28\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at async Review.sync (D:\\KHACHSAN3TL\\node_modules\\sequelize\\lib\\model.js:984:11)\n    at async Sequelize.sync (D:\\KHACHSAN3TL\\node_modules\\sequelize\\lib\\sequelize.js:377:9)\n    at async startServer (D:\\KHACHSAN3TL\\server.js:19:13)","timestamp":"2025-03-18T16:10:31.662Z"}
{"level":"info","message":"Database synchronized","timestamp":"2025-03-18T16:10:31.664Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-03-18T16:10:31.669Z"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-03-18T16:15:56.409Z"}
{"level":"error","message":"Database sync error: Column 'user_id' cannot be NOT NULL: needed in a foreign key constraint 'reviews_ibfk_3' SET NULL","name":"SequelizeDatabaseError","original":{"code":"ER_FK_COLUMN_NOT_NULL","errno":1830,"sql":"ALTER TABLE `reviews` ADD FOREIGN KEY (`user_id`) REFERENCES `users` (`id`) ON DELETE SET NULL ON UPDATE CASCADE;","sqlMessage":"Column 'user_id' cannot be NOT NULL: needed in a foreign key constraint 'reviews_ibfk_3' SET NULL","sqlState":"HY000"},"parameters":{},"parent":{"code":"ER_FK_COLUMN_NOT_NULL","errno":1830,"sql":"ALTER TABLE `reviews` ADD FOREIGN KEY (`user_id`) REFERENCES `users` (`id`) ON DELETE SET NULL ON UPDATE CASCADE;","sqlMessage":"Column 'user_id' cannot be NOT NULL: needed in a foreign key constraint 'reviews_ibfk_3' SET NULL","sqlState":"HY000"},"sql":"ALTER TABLE `reviews` ADD FOREIGN KEY (`user_id`) REFERENCES `users` (`id`) ON DELETE SET NULL ON UPDATE CASCADE;","stack":"Error\n    at Query.run (D:\\KHACHSAN3TL\\node_modules\\sequelize\\lib\\dialects\\mysql\\query.js:52:25)\n    at D:\\KHACHSAN3TL\\node_modules\\sequelize\\lib\\sequelize.js:315:28\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at async Review.sync (D:\\KHACHSAN3TL\\node_modules\\sequelize\\lib\\model.js:984:11)\n    at async Sequelize.sync (D:\\KHACHSAN3TL\\node_modules\\sequelize\\lib\\sequelize.js:377:9)\n    at async startServer (D:\\KHACHSAN3TL\\server.js:19:13)","timestamp":"2025-03-18T16:16:03.844Z"}
{"level":"info","message":"Database synchronized","timestamp":"2025-03-18T16:16:03.845Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-03-18T16:16:03.848Z"}
{"level":"info","message":"Payment processed for booking 8 (undefined) by admin 3","timestamp":"2025-03-18T16:17:10.827Z"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-03-18T16:19:47.624Z"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-03-18T16:19:55.738Z"}
{"level":"error","message":"Database sync error: Column 'user_id' cannot be NOT NULL: needed in a foreign key constraint 'reviews_ibfk_3' SET NULL","name":"SequelizeDatabaseError","original":{"code":"ER_FK_COLUMN_NOT_NULL","errno":1830,"sql":"ALTER TABLE `reviews` ADD FOREIGN KEY (`user_id`) REFERENCES `users` (`id`) ON DELETE SET NULL ON UPDATE CASCADE;","sqlMessage":"Column 'user_id' cannot be NOT NULL: needed in a foreign key constraint 'reviews_ibfk_3' SET NULL","sqlState":"HY000"},"parameters":{},"parent":{"code":"ER_FK_COLUMN_NOT_NULL","errno":1830,"sql":"ALTER TABLE `reviews` ADD FOREIGN KEY (`user_id`) REFERENCES `users` (`id`) ON DELETE SET NULL ON UPDATE CASCADE;","sqlMessage":"Column 'user_id' cannot be NOT NULL: needed in a foreign key constraint 'reviews_ibfk_3' SET NULL","sqlState":"HY000"},"sql":"ALTER TABLE `reviews` ADD FOREIGN KEY (`user_id`) REFERENCES `users` (`id`) ON DELETE SET NULL ON UPDATE CASCADE;","stack":"Error\n    at Query.run (D:\\KHACHSAN3TL\\node_modules\\sequelize\\lib\\dialects\\mysql\\query.js:52:25)\n    at D:\\KHACHSAN3TL\\node_modules\\sequelize\\lib\\sequelize.js:315:28\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at async Review.sync (D:\\KHACHSAN3TL\\node_modules\\sequelize\\lib\\model.js:984:11)\n    at async Sequelize.sync (D:\\KHACHSAN3TL\\node_modules\\sequelize\\lib\\sequelize.js:377:9)\n    at async startServer (D:\\KHACHSAN3TL\\server.js:19:13)","timestamp":"2025-03-18T16:20:02.374Z"}
{"level":"info","message":"Database synchronized","timestamp":"2025-03-18T16:20:02.376Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-03-18T16:20:02.383Z"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-03-18T16:22:11.251Z"}
{"level":"error","message":"Database sync error: Too many keys specified; max 64 keys allowed","name":"SequelizeDatabaseError","original":{"code":"ER_TOO_MANY_KEYS","errno":1069,"sql":"ALTER TABLE `users` CHANGE `email` `email` VARCHAR(255) NOT NULL UNIQUE;","sqlMessage":"Too many keys specified; max 64 keys allowed","sqlState":"42000"},"parameters":{},"parent":{"code":"ER_TOO_MANY_KEYS","errno":1069,"sql":"ALTER TABLE `users` CHANGE `email` `email` VARCHAR(255) NOT NULL UNIQUE;","sqlMessage":"Too many keys specified; max 64 keys allowed","sqlState":"42000"},"sql":"ALTER TABLE `users` CHANGE `email` `email` VARCHAR(255) NOT NULL UNIQUE;","stack":"Error\n    at Query.run (D:\\KHACHSAN3TL\\node_modules\\sequelize\\lib\\dialects\\mysql\\query.js:52:25)\n    at D:\\KHACHSAN3TL\\node_modules\\sequelize\\lib\\sequelize.js:315:28\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at async User.sync (D:\\KHACHSAN3TL\\node_modules\\sequelize\\lib\\model.js:984:11)\n    at async Sequelize.sync (D:\\KHACHSAN3TL\\node_modules\\sequelize\\lib\\sequelize.js:377:9)\n    at async startServer (D:\\KHACHSAN3TL\\server.js:19:13)","timestamp":"2025-03-18T16:22:11.614Z"}
{"level":"info","message":"Database synchronized","timestamp":"2025-03-18T16:22:11.615Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-03-18T16:22:11.620Z"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-03-18T16:24:20.138Z"}
{"level":"error","message":"Database sync error: Too many keys specified; max 64 keys allowed","name":"SequelizeDatabaseError","original":{"code":"ER_TOO_MANY_KEYS","errno":1069,"sql":"ALTER TABLE `users` CHANGE `email` `email` VARCHAR(255) NOT NULL UNIQUE;","sqlMessage":"Too many keys specified; max 64 keys allowed","sqlState":"42000"},"parameters":{},"parent":{"code":"ER_TOO_MANY_KEYS","errno":1069,"sql":"ALTER TABLE `users` CHANGE `email` `email` VARCHAR(255) NOT NULL UNIQUE;","sqlMessage":"Too many keys specified; max 64 keys allowed","sqlState":"42000"},"sql":"ALTER TABLE `users` CHANGE `email` `email` VARCHAR(255) NOT NULL UNIQUE;","stack":"Error\n    at Query.run (D:\\KHACHSAN3TL\\node_modules\\sequelize\\lib\\dialects\\mysql\\query.js:52:25)\n    at D:\\KHACHSAN3TL\\node_modules\\sequelize\\lib\\sequelize.js:315:28\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at async User.sync (D:\\KHACHSAN3TL\\node_modules\\sequelize\\lib\\model.js:984:11)\n    at async Sequelize.sync (D:\\KHACHSAN3TL\\node_modules\\sequelize\\lib\\sequelize.js:377:9)\n    at async startServer (D:\\KHACHSAN3TL\\server.js:19:13)","timestamp":"2025-03-18T16:24:20.556Z"}
{"level":"info","message":"Database synchronized","timestamp":"2025-03-18T16:24:20.558Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-03-18T16:24:20.564Z"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-03-19T06:55:34.634Z"}
{"level":"error","message":"Database sync error: Too many keys specified; max 64 keys allowed","name":"SequelizeDatabaseError","original":{"code":"ER_TOO_MANY_KEYS","errno":1069,"sql":"ALTER TABLE `users` CHANGE `email` `email` VARCHAR(255) NOT NULL UNIQUE;","sqlMessage":"Too many keys specified; max 64 keys allowed","sqlState":"42000"},"parameters":{},"parent":{"code":"ER_TOO_MANY_KEYS","errno":1069,"sql":"ALTER TABLE `users` CHANGE `email` `email` VARCHAR(255) NOT NULL UNIQUE;","sqlMessage":"Too many keys specified; max 64 keys allowed","sqlState":"42000"},"sql":"ALTER TABLE `users` CHANGE `email` `email` VARCHAR(255) NOT NULL UNIQUE;","stack":"Error\n    at Query.run (D:\\KHACHSAN3TL\\node_modules\\sequelize\\lib\\dialects\\mysql\\query.js:52:25)\n    at D:\\KHACHSAN3TL\\node_modules\\sequelize\\lib\\sequelize.js:315:28\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at async User.sync (D:\\KHACHSAN3TL\\node_modules\\sequelize\\lib\\model.js:984:11)\n    at async Sequelize.sync (D:\\KHACHSAN3TL\\node_modules\\sequelize\\lib\\sequelize.js:377:9)\n    at async startServer (D:\\KHACHSAN3TL\\server.js:19:13)","timestamp":"2025-03-19T06:55:34.915Z"}
{"level":"info","message":"Database synchronized","timestamp":"2025-03-19T06:55:34.916Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-03-19T06:55:34.919Z"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-03-19T07:00:24.874Z"}
{"level":"error","message":"Database sync error: Too many keys specified; max 64 keys allowed","name":"SequelizeDatabaseError","original":{"code":"ER_TOO_MANY_KEYS","errno":1069,"sql":"ALTER TABLE `users` CHANGE `email` `email` VARCHAR(255) NOT NULL UNIQUE;","sqlMessage":"Too many keys specified; max 64 keys allowed","sqlState":"42000"},"parameters":{},"parent":{"code":"ER_TOO_MANY_KEYS","errno":1069,"sql":"ALTER TABLE `users` CHANGE `email` `email` VARCHAR(255) NOT NULL UNIQUE;","sqlMessage":"Too many keys specified; max 64 keys allowed","sqlState":"42000"},"sql":"ALTER TABLE `users` CHANGE `email` `email` VARCHAR(255) NOT NULL UNIQUE;","stack":"Error\n    at Query.run (D:\\KHACHSAN3TL\\node_modules\\sequelize\\lib\\dialects\\mysql\\query.js:52:25)\n    at D:\\KHACHSAN3TL\\node_modules\\sequelize\\lib\\sequelize.js:315:28\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at async User.sync (D:\\KHACHSAN3TL\\node_modules\\sequelize\\lib\\model.js:984:11)\n    at async Sequelize.sync (D:\\KHACHSAN3TL\\node_modules\\sequelize\\lib\\sequelize.js:377:9)\n    at async startServer (D:\\KHACHSAN3TL\\server.js:19:13)","timestamp":"2025-03-19T07:00:25.168Z"}
{"level":"info","message":"Database synchronized","timestamp":"2025-03-19T07:00:25.170Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-03-19T07:00:25.174Z"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-03-19T07:01:42.310Z"}
{"level":"info","message":"Database synchronized with safe settings","timestamp":"2025-03-19T07:01:42.404Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-03-19T07:01:42.409Z"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-03-19T07:05:04.081Z"}
{"level":"info","message":"Database synchronized with safe settings","timestamp":"2025-03-19T07:05:04.201Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-03-19T07:05:04.210Z"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-03-19T07:05:13.343Z"}
{"level":"info","message":"Database synchronized with safe settings","timestamp":"2025-03-19T07:05:13.407Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-03-19T07:05:13.411Z"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-03-19T07:05:24.633Z"}
{"level":"info","message":"Database synchronized with safe settings","timestamp":"2025-03-19T07:05:24.716Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-03-19T07:05:24.722Z"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-03-19T07:06:47.939Z"}
{"level":"info","message":"Database synchronized with safe settings","timestamp":"2025-03-19T07:06:48.002Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-03-19T07:06:48.006Z"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-03-19T07:12:44.452Z"}
{"level":"info","message":"Database synchronized with safe settings","timestamp":"2025-03-19T07:12:44.523Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-03-19T07:12:44.529Z"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-03-19T07:46:08.099Z"}
{"level":"info","message":"Database synchronized with safe settings","timestamp":"2025-03-19T07:46:08.164Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-03-19T07:46:08.167Z"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-03-19T15:51:20.764Z"}
{"level":"info","message":"Database synchronized with safe settings","timestamp":"2025-03-19T15:51:20.979Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-03-19T15:51:20.982Z"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-03-19T15:54:46.765Z"}
{"level":"info","message":"Database synchronized with safe settings","timestamp":"2025-03-19T15:54:46.861Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-03-19T15:54:46.867Z"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-03-19T15:56:54.260Z"}
{"level":"info","message":"Database synchronized with safe settings","timestamp":"2025-03-19T15:56:54.352Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-03-19T15:56:54.357Z"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-03-19T15:58:43.269Z"}
{"level":"info","message":"Database synchronized with safe settings","timestamp":"2025-03-19T15:58:43.347Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-03-19T15:58:43.351Z"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-03-19T16:02:40.691Z"}
{"level":"info","message":"Database synchronized with safe settings","timestamp":"2025-03-19T16:02:40.793Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-03-19T16:02:40.799Z"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-03-19T16:02:55.343Z"}
{"level":"info","message":"Database synchronized with safe settings","timestamp":"2025-03-19T16:02:55.421Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-03-19T16:02:55.426Z"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-03-19T16:06:27.718Z"}
{"level":"info","message":"Database synchronized with safe settings","timestamp":"2025-03-19T16:06:27.806Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-03-19T16:06:27.810Z"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-03-19T16:11:52.161Z"}
{"level":"info","message":"Database synchronized with safe settings","timestamp":"2025-03-19T16:11:52.243Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-03-19T16:11:52.247Z"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-03-19T16:12:07.272Z"}
{"level":"info","message":"Database synchronized with safe settings","timestamp":"2025-03-19T16:12:07.331Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-03-19T16:12:07.336Z"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-03-19T16:19:09.845Z"}
{"level":"info","message":"Database synchronized with safe settings","timestamp":"2025-03-19T16:19:09.927Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-03-19T16:19:09.932Z"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-03-19T16:22:03.962Z"}
{"level":"info","message":"Database synchronized with safe settings","timestamp":"2025-03-19T16:22:04.042Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-03-19T16:22:04.047Z"}
{"level":"info","message":"Payment processed for booking 19 (undefined) by admin 3","timestamp":"2025-03-19T16:36:13.135Z"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-03-19T16:45:36.083Z"}
{"level":"info","message":"Database synchronized with safe settings","timestamp":"2025-03-19T16:45:36.145Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-03-19T16:45:36.148Z"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-03-19T16:45:54.049Z"}
{"level":"info","message":"Database synchronized with safe settings","timestamp":"2025-03-19T16:45:54.085Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-03-19T16:45:54.087Z"}
{"level":"info","message":"Checkout completed for booking 19 (No code) by admin 3","timestamp":"2025-03-19T16:46:06.094Z"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-03-19T17:00:50.503Z"}
{"level":"info","message":"Database synchronized with safe settings","timestamp":"2025-03-19T17:00:50.612Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-03-19T17:00:50.618Z"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-03-19T17:02:58.428Z"}
{"level":"info","message":"Database synchronized with safe settings","timestamp":"2025-03-19T17:02:58.496Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-03-19T17:02:58.502Z"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-03-19T17:03:31.551Z"}
{"level":"info","message":"Database synchronized with safe settings","timestamp":"2025-03-19T17:03:31.622Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-03-19T17:03:31.626Z"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-03-19T17:06:58.766Z"}
{"level":"info","message":"Database synchronized with safe settings","timestamp":"2025-03-19T17:06:58.826Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-03-19T17:06:58.830Z"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-03-19T17:07:17.156Z"}
{"level":"info","message":"Database synchronized with safe settings","timestamp":"2025-03-19T17:07:17.192Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-03-19T17:07:17.194Z"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-03-19T17:11:21.815Z"}
{"level":"info","message":"Database synchronized with safe settings","timestamp":"2025-03-19T17:11:21.893Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-03-19T17:11:21.898Z"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-03-19T17:15:09.443Z"}
{"level":"info","message":"Database synchronized with safe settings","timestamp":"2025-03-19T17:15:09.509Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-03-19T17:15:09.513Z"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-03-19T17:17:14.180Z"}
{"level":"info","message":"Database synchronized with safe settings","timestamp":"2025-03-19T17:17:14.252Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-03-19T17:17:14.257Z"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-03-19T17:17:48.529Z"}
{"level":"info","message":"Database synchronized with safe settings","timestamp":"2025-03-19T17:17:48.576Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-03-19T17:17:48.578Z"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-03-19T17:19:18.035Z"}
{"level":"info","message":"Database synchronized with safe settings","timestamp":"2025-03-19T17:19:18.108Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-03-19T17:19:18.113Z"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-03-19T17:22:01.240Z"}
{"level":"info","message":"Database synchronized with safe settings","timestamp":"2025-03-19T17:22:01.304Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-03-19T17:22:01.309Z"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-03-19T17:27:09.714Z"}
{"level":"info","message":"Database synchronized with safe settings","timestamp":"2025-03-19T17:27:09.819Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-03-19T17:27:09.826Z"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-03-19T17:27:13.537Z"}
{"level":"info","message":"Database synchronized with safe settings","timestamp":"2025-03-19T17:27:13.614Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-03-19T17:27:13.620Z"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-03-19T17:29:21.045Z"}
{"level":"info","message":"Database synchronized with safe settings","timestamp":"2025-03-19T17:29:21.126Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-03-19T17:29:21.132Z"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-03-19T17:29:54.470Z"}
{"level":"info","message":"Database synchronized with safe settings","timestamp":"2025-03-19T17:29:54.514Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-03-19T17:29:54.516Z"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-03-19T23:55:05.067Z"}
{"level":"info","message":"Database synchronized with safe settings","timestamp":"2025-03-19T23:55:05.135Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-03-19T23:55:05.139Z"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-03-19T23:57:18.620Z"}
{"level":"info","message":"Database synchronized with safe settings","timestamp":"2025-03-19T23:57:18.703Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-03-19T23:57:18.708Z"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-03-20T00:00:50.097Z"}
{"level":"info","message":"Database synchronized with safe settings","timestamp":"2025-03-20T00:00:50.184Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-03-20T00:00:50.192Z"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-03-20T00:04:03.519Z"}
{"level":"info","message":"Database synchronized with safe settings","timestamp":"2025-03-20T00:04:03.594Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-03-20T00:04:03.598Z"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-03-20T00:04:05.979Z"}
{"level":"info","message":"Database synchronized with safe settings","timestamp":"2025-03-20T00:04:06.054Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-03-20T00:04:06.060Z"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-03-20T00:07:01.961Z"}
{"level":"info","message":"Database synchronized with safe settings","timestamp":"2025-03-20T00:07:02.028Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-03-20T00:07:02.032Z"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-03-20T00:07:16.208Z"}
{"level":"info","message":"Database synchronized with safe settings","timestamp":"2025-03-20T00:07:16.251Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-03-20T00:07:16.254Z"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-03-20T00:11:15.735Z"}
{"level":"info","message":"Database synchronized with safe settings","timestamp":"2025-03-20T00:11:15.809Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-03-20T00:11:15.814Z"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-03-20T00:11:26.370Z"}
{"level":"info","message":"Database synchronized with safe settings","timestamp":"2025-03-20T00:11:26.440Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-03-20T00:11:26.445Z"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-03-20T00:14:15.609Z"}
{"level":"info","message":"Database synchronized with safe settings","timestamp":"2025-03-20T00:14:15.668Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-03-20T00:14:15.672Z"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-03-20T00:17:06.257Z"}
{"level":"info","message":"Database synchronized with safe settings","timestamp":"2025-03-20T00:17:06.342Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-03-20T00:17:06.349Z"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-03-20T00:17:59.936Z"}
{"level":"info","message":"Database synchronized with safe settings","timestamp":"2025-03-20T00:18:00.029Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-03-20T00:18:00.035Z"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-03-20T00:18:03.873Z"}
{"level":"info","message":"Database synchronized with safe settings","timestamp":"2025-03-20T00:18:03.961Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-03-20T00:18:03.967Z"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-03-20T07:37:20.795Z"}
{"level":"info","message":"Database synchronized with safe settings","timestamp":"2025-03-20T07:37:20.896Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-03-20T07:37:20.899Z"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-03-20T07:42:17.603Z"}
{"level":"info","message":"Database synchronized with safe settings","timestamp":"2025-03-20T07:42:17.692Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-03-20T07:42:17.697Z"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-03-20T07:42:56.134Z"}
{"level":"info","message":"Database synchronized with safe settings","timestamp":"2025-03-20T07:42:56.214Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-03-20T07:42:56.218Z"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-03-20T07:48:23.707Z"}
{"level":"info","message":"Database synchronized with safe settings","timestamp":"2025-03-20T07:48:23.793Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-03-20T07:48:23.800Z"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-03-20T07:48:42.751Z"}
{"level":"info","message":"Database synchronized with safe settings","timestamp":"2025-03-20T07:48:42.847Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-03-20T07:48:42.852Z"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-03-20T07:50:56.330Z"}
{"level":"info","message":"Database synchronized with safe settings","timestamp":"2025-03-20T07:50:56.420Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-03-20T07:50:56.425Z"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-03-20T07:51:04.360Z"}
{"level":"info","message":"Database synchronized with safe settings","timestamp":"2025-03-20T07:51:04.436Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-03-20T07:51:04.442Z"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-03-20T07:55:32.130Z"}
{"level":"info","message":"Database synchronized with safe settings","timestamp":"2025-03-20T07:55:32.214Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-03-20T07:55:32.220Z"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-03-20T07:57:55.333Z"}
{"level":"info","message":"Database synchronized with safe settings","timestamp":"2025-03-20T07:57:55.533Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-03-20T07:57:55.542Z"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-03-20T07:57:59.844Z"}
{"level":"info","message":"Database synchronized with safe settings","timestamp":"2025-03-20T07:57:59.942Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-03-20T07:57:59.948Z"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-03-20T07:59:43.339Z"}
{"level":"info","message":"Database synchronized with safe settings","timestamp":"2025-03-20T07:59:43.424Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-03-20T07:59:43.430Z"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-03-20T08:02:14.265Z"}
{"level":"info","message":"Database synchronized with safe settings","timestamp":"2025-03-20T08:02:14.332Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-03-20T08:02:14.336Z"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-03-20T08:02:36.402Z"}
{"level":"info","message":"Database synchronized with safe settings","timestamp":"2025-03-20T08:02:36.482Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-03-20T08:02:36.488Z"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-03-20T08:03:09.265Z"}
{"level":"info","message":"Database synchronized with safe settings","timestamp":"2025-03-20T08:03:09.345Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-03-20T08:03:09.351Z"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-03-20T08:05:37.240Z"}
{"level":"info","message":"Database synchronized with safe settings","timestamp":"2025-03-20T08:05:37.329Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-03-20T08:05:37.336Z"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-03-20T08:05:57.444Z"}
{"level":"info","message":"Database synchronized with safe settings","timestamp":"2025-03-20T08:05:57.558Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-03-20T08:05:57.566Z"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-03-20T08:08:41.733Z"}
{"level":"info","message":"Database synchronized with safe settings","timestamp":"2025-03-20T08:08:41.830Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-03-20T08:08:41.836Z"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-03-20T08:13:37.806Z"}
{"level":"info","message":"Database synchronized with safe settings","timestamp":"2025-03-20T08:13:37.900Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-03-20T08:13:37.907Z"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-03-20T08:16:02.898Z"}
{"level":"info","message":"Database synchronized with safe settings","timestamp":"2025-03-20T08:16:03.004Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-03-20T08:16:03.011Z"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-03-20T08:19:27.814Z"}
{"level":"info","message":"Database synchronized with safe settings","timestamp":"2025-03-20T08:19:27.902Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-03-20T08:19:27.908Z"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-03-20T08:22:19.735Z"}
{"level":"info","message":"Database synchronized with safe settings","timestamp":"2025-03-20T08:22:19.818Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-03-20T08:22:19.823Z"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-03-20T08:24:53.797Z"}
{"level":"info","message":"Database synchronized with safe settings","timestamp":"2025-03-20T08:24:53.875Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-03-20T08:24:53.880Z"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-03-20T08:29:39.342Z"}
{"level":"info","message":"Database synchronized with safe settings","timestamp":"2025-03-20T08:29:39.421Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-03-20T08:29:39.426Z"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-03-20T08:32:21.796Z"}
{"level":"info","message":"Database synchronized with safe settings","timestamp":"2025-03-20T08:32:21.877Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-03-20T08:32:21.883Z"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-03-20T08:36:54.903Z"}
{"level":"info","message":"Database synchronized with safe settings","timestamp":"2025-03-20T08:36:55.011Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-03-20T08:36:55.017Z"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-03-20T08:40:13.816Z"}
{"level":"info","message":"Database synchronized with safe settings","timestamp":"2025-03-20T08:40:13.892Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-03-20T08:40:13.897Z"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-03-20T08:41:16.375Z"}
{"level":"info","message":"Database synchronized with safe settings","timestamp":"2025-03-20T08:41:16.433Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-03-20T08:41:16.438Z"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-03-20T08:44:01.144Z"}
{"level":"info","message":"Database synchronized with safe settings","timestamp":"2025-03-20T08:44:01.223Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-03-20T08:44:01.229Z"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-03-25T01:12:05.109Z"}
{"level":"info","message":"Database synchronized with safe settings","timestamp":"2025-03-25T01:12:05.460Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-03-25T01:12:05.465Z"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-03-25T01:19:26.981Z"}
{"level":"info","message":"Database synchronized with safe settings","timestamp":"2025-03-25T01:19:27.066Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-03-25T01:19:27.073Z"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-03-25T01:47:38.766Z"}
{"level":"info","message":"Database synchronized with safe settings","timestamp":"2025-03-25T01:47:38.802Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-03-25T01:47:38.805Z"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-03-25T01:48:30.659Z"}
{"level":"info","message":"Database synchronized with safe settings","timestamp":"2025-03-25T01:48:30.715Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-03-25T01:48:30.718Z"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-03-25T01:51:29.152Z"}
{"level":"info","message":"Database synchronized with safe settings","timestamp":"2025-03-25T01:51:29.209Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-03-25T01:51:29.212Z"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-03-25T01:52:51.709Z"}
{"level":"info","message":"Database synchronized with safe settings","timestamp":"2025-03-25T01:52:51.745Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-03-25T01:52:51.747Z"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-03-25T01:59:24.108Z"}
{"level":"info","message":"Database synchronized with safe settings","timestamp":"2025-03-25T01:59:24.183Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-03-25T01:59:24.188Z"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-03-25T01:59:35.205Z"}
{"level":"info","message":"Database synchronized with safe settings","timestamp":"2025-03-25T01:59:35.254Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-03-25T01:59:35.257Z"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-03-25T02:03:57.740Z"}
{"level":"info","message":"Database synchronized with safe settings","timestamp":"2025-03-25T02:03:57.810Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-03-25T02:03:57.816Z"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-03-25T02:15:11.672Z"}
{"level":"info","message":"Database synchronized with safe settings","timestamp":"2025-03-25T02:15:11.751Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-03-25T02:15:11.756Z"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-03-25T02:15:42.243Z"}
{"level":"info","message":"Database synchronized with safe settings","timestamp":"2025-03-25T02:15:42.312Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-03-25T02:15:42.317Z"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-03-25T02:18:40.711Z"}
{"level":"info","message":"Database synchronized with safe settings","timestamp":"2025-03-25T02:18:40.782Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-03-25T02:18:40.787Z"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-03-25T02:26:07.886Z"}
{"level":"info","message":"Database synchronized with safe settings","timestamp":"2025-03-25T02:26:07.956Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-03-25T02:26:07.961Z"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-03-25T02:26:32.428Z"}
{"level":"info","message":"Database synchronized with safe settings","timestamp":"2025-03-25T02:26:32.461Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-03-25T02:26:32.463Z"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-03-25T02:33:16.490Z"}
{"level":"info","message":"Database synchronized with safe settings","timestamp":"2025-03-25T02:33:16.665Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-03-25T02:33:16.673Z"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-03-25T02:33:41.267Z"}
{"level":"info","message":"Database synchronized with safe settings","timestamp":"2025-03-25T02:33:41.338Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-03-25T02:33:41.344Z"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-03-25T02:39:47.480Z"}
{"level":"info","message":"Database synchronized with safe settings","timestamp":"2025-03-25T02:39:47.569Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-03-25T02:39:47.575Z"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-03-25T02:41:03.899Z"}
{"level":"info","message":"Database synchronized with safe settings","timestamp":"2025-03-25T02:41:03.967Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-03-25T02:41:03.971Z"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-03-25T04:59:14.279Z"}
{"level":"info","message":"Database synchronized with safe settings","timestamp":"2025-03-25T04:59:14.338Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-03-25T04:59:14.342Z"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-03-25T05:08:26.762Z"}
{"level":"info","message":"Database synchronized with safe settings","timestamp":"2025-03-25T05:08:26.829Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-03-25T05:08:26.834Z"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-03-25T05:08:31.400Z"}
{"level":"info","message":"Database synchronized with safe settings","timestamp":"2025-03-25T05:08:31.477Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-03-25T05:08:31.482Z"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-03-25T05:08:33.405Z"}
{"level":"info","message":"Database synchronized with safe settings","timestamp":"2025-03-25T05:08:33.464Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-03-25T05:08:33.468Z"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-03-25T05:11:27.079Z"}
{"level":"info","message":"Database synchronized with safe settings","timestamp":"2025-03-25T05:11:27.150Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-03-25T05:11:27.156Z"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-03-25T05:11:44.959Z"}
{"level":"info","message":"Database synchronized with safe settings","timestamp":"2025-03-25T05:11:45.004Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-03-25T05:11:45.008Z"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-03-25T05:12:06.539Z"}
{"level":"info","message":"Database synchronized with safe settings","timestamp":"2025-03-25T05:12:06.595Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-03-25T05:12:06.599Z"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-03-25T05:12:37.869Z"}
{"level":"info","message":"Database synchronized with safe settings","timestamp":"2025-03-25T05:12:37.981Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-03-25T05:12:37.987Z"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-03-25T05:16:44.613Z"}
{"level":"info","message":"Database synchronized with safe settings","timestamp":"2025-03-25T05:16:44.693Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-03-25T05:16:44.699Z"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-03-25T05:17:15.783Z"}
{"level":"info","message":"Database synchronized with safe settings","timestamp":"2025-03-25T05:17:15.846Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-03-25T05:17:15.851Z"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-03-25T05:18:08.807Z"}
{"level":"info","message":"Database synchronized with safe settings","timestamp":"2025-03-25T05:18:08.872Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-03-25T05:18:08.876Z"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-03-25T05:21:04.442Z"}
{"level":"info","message":"Database synchronized with safe settings","timestamp":"2025-03-25T05:21:04.499Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-03-25T05:21:04.503Z"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-03-25T05:21:33.353Z"}
{"level":"info","message":"Database synchronized with safe settings","timestamp":"2025-03-25T05:21:33.460Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-03-25T05:21:33.470Z"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-03-25T05:21:35.574Z"}
{"level":"info","message":"Database synchronized with safe settings","timestamp":"2025-03-25T05:21:35.639Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-03-25T05:21:35.644Z"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-03-25T05:22:37.652Z"}
{"level":"info","message":"Database synchronized with safe settings","timestamp":"2025-03-25T05:22:37.717Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-03-25T05:22:37.721Z"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-03-25T05:28:21.859Z"}
{"level":"info","message":"Database synchronized with safe settings","timestamp":"2025-03-25T05:28:21.921Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-03-25T05:28:21.926Z"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-03-25T05:29:23.110Z"}
{"level":"info","message":"Database synchronized with safe settings","timestamp":"2025-03-25T05:29:23.181Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-03-25T05:29:23.186Z"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-03-25T05:29:37.588Z"}
{"level":"info","message":"Database synchronized with safe settings","timestamp":"2025-03-25T05:29:37.665Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-03-25T05:29:37.672Z"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-03-25T05:32:35.797Z"}
{"level":"info","message":"Database synchronized with safe settings","timestamp":"2025-03-25T05:32:35.852Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-03-25T05:32:35.855Z"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-03-25T05:32:50.947Z"}
{"level":"info","message":"Database synchronized with safe settings","timestamp":"2025-03-25T05:32:50.981Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-03-25T05:32:50.983Z"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-03-25T05:59:00.706Z"}
{"level":"info","message":"Database synchronized with safe settings","timestamp":"2025-03-25T05:59:00.749Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-03-25T05:59:00.752Z"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-03-25T06:03:49.401Z"}
{"level":"info","message":"Database synchronized with safe settings","timestamp":"2025-03-25T06:03:49.475Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-03-25T06:03:49.482Z"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-03-25T06:05:15.384Z"}
{"level":"info","message":"Database synchronized with safe settings","timestamp":"2025-03-25T06:05:15.422Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-03-25T06:05:15.424Z"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-03-25T06:05:39.026Z"}
{"level":"info","message":"Database synchronized with safe settings","timestamp":"2025-03-25T06:05:39.100Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-03-25T06:05:39.104Z"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-03-25T06:10:19.164Z"}
{"level":"info","message":"Database synchronized with safe settings","timestamp":"2025-03-25T06:10:19.227Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-03-25T06:10:19.230Z"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-03-25T06:10:33.683Z"}
{"level":"info","message":"Database synchronized with safe settings","timestamp":"2025-03-25T06:10:33.716Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-03-25T06:10:33.718Z"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-03-25T06:11:28.077Z"}
{"level":"info","message":"Database synchronized with safe settings","timestamp":"2025-03-25T06:11:28.138Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-03-25T06:11:28.144Z"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-03-25T06:11:30.905Z"}
{"level":"info","message":"Database synchronized with safe settings","timestamp":"2025-03-25T06:11:31.009Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-03-25T06:11:31.016Z"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-03-25T06:14:11.018Z"}
{"level":"info","message":"Database synchronized with safe settings","timestamp":"2025-03-25T06:14:11.088Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-03-25T06:14:11.092Z"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-03-25T06:20:53.811Z"}
{"level":"info","message":"Database synchronized with safe settings","timestamp":"2025-03-25T06:20:53.873Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-03-25T06:20:53.877Z"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-03-25T06:21:21.863Z"}
{"level":"info","message":"Database synchronized with safe settings","timestamp":"2025-03-25T06:21:21.899Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-03-25T06:21:21.902Z"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-03-25T08:57:15.214Z"}
{"level":"info","message":"Database synchronized with safe settings","timestamp":"2025-03-25T08:57:15.302Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-03-25T08:57:15.309Z"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-03-25T09:06:13.259Z"}
{"level":"info","message":"Database synchronized with safe settings","timestamp":"2025-03-25T09:06:13.337Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-03-25T09:06:13.341Z"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-03-25T09:06:35.111Z"}
{"level":"info","message":"Database synchronized with safe settings","timestamp":"2025-03-25T09:06:35.192Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-03-25T09:06:35.198Z"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-03-25T09:07:13.928Z"}
{"level":"info","message":"Database synchronized with safe settings","timestamp":"2025-03-25T09:07:13.964Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-03-25T09:07:13.967Z"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-03-25T09:07:31.145Z"}
{"level":"info","message":"Database synchronized with safe settings","timestamp":"2025-03-25T09:07:31.223Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-03-25T09:07:31.228Z"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-03-25T09:07:43.841Z"}
{"level":"info","message":"Database synchronized with safe settings","timestamp":"2025-03-25T09:07:43.894Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-03-25T09:07:43.898Z"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-03-25T09:08:44.453Z"}
{"level":"info","message":"Database synchronized with safe settings","timestamp":"2025-03-25T09:08:44.488Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-03-25T09:08:44.490Z"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-03-25T09:10:24.971Z"}
{"level":"info","message":"Database synchronized with safe settings","timestamp":"2025-03-25T09:10:25.003Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-03-25T09:10:25.005Z"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-03-25T09:17:51.640Z"}
{"level":"info","message":"Database synchronized with safe settings","timestamp":"2025-03-25T09:17:51.715Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-03-25T09:17:51.721Z"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-04-02T15:48:48.200Z"}
{"level":"info","message":"Database synchronized with safe settings","timestamp":"2025-04-02T15:48:48.474Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-04-02T15:48:48.479Z"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-04-02T15:56:21.538Z"}
{"level":"info","message":"Database synchronized with safe settings","timestamp":"2025-04-02T15:56:21.621Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-04-02T15:56:21.625Z"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-04-02T16:01:41.472Z"}
{"level":"info","message":"Database synchronized with safe settings","timestamp":"2025-04-02T16:01:41.558Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-04-02T16:01:41.563Z"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-04-02T16:01:54.964Z"}
{"level":"info","message":"Database synchronized with safe settings","timestamp":"2025-04-02T16:01:55.085Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-04-02T16:01:55.092Z"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-04-02T16:02:52.919Z"}
{"level":"info","message":"Database synchronized with safe settings","timestamp":"2025-04-02T16:02:52.983Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-04-02T16:02:52.988Z"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-04-02T16:20:03.773Z"}
{"level":"info","message":"Database synchronized with safe settings","timestamp":"2025-04-02T16:20:03.872Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-04-02T16:20:03.878Z"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-04-02T16:23:26.389Z"}
{"level":"info","message":"Database synchronized with safe settings","timestamp":"2025-04-02T16:23:26.457Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-04-02T16:23:26.461Z"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-04-02T16:23:39.314Z"}
{"level":"info","message":"Database synchronized with safe settings","timestamp":"2025-04-02T16:23:39.368Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-04-02T16:23:39.372Z"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-04-02T16:33:23.127Z"}
{"level":"info","message":"Database synchronized with safe settings","timestamp":"2025-04-02T16:33:23.198Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-04-02T16:33:23.202Z"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-04-02T16:34:27.251Z"}
{"level":"info","message":"Database synchronized with safe settings","timestamp":"2025-04-02T16:34:27.320Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-04-02T16:34:27.324Z"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-04-02T16:35:42.885Z"}
{"level":"info","message":"Database synchronized with safe settings","timestamp":"2025-04-02T16:35:42.974Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-04-02T16:35:42.980Z"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-04-02T16:36:16.376Z"}
{"level":"info","message":"Database synchronized with safe settings","timestamp":"2025-04-02T16:36:16.451Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-04-02T16:36:16.456Z"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-04-02T16:36:43.282Z"}
{"level":"info","message":"Database synchronized with safe settings","timestamp":"2025-04-02T16:36:43.364Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-04-02T16:36:43.368Z"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-04-02T16:39:20.824Z"}
{"level":"info","message":"Database synchronized with safe settings","timestamp":"2025-04-02T16:39:20.906Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-04-02T16:39:20.910Z"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-04-03T07:38:45.506Z"}
{"level":"info","message":"Database synchronized with safe settings","timestamp":"2025-04-03T07:38:45.568Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-04-03T07:38:45.571Z"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-04-03T08:27:32.332Z"}
{"level":"info","message":"Database synchronized with safe settings","timestamp":"2025-04-03T08:27:32.434Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-04-03T08:27:32.442Z"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-04-03T10:33:24.538Z"}
{"level":"info","message":"Database synchronized with safe settings","timestamp":"2025-04-03T10:33:24.730Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-04-03T10:33:24.739Z"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-04-03T11:15:36.959Z"}
{"level":"info","message":"Database synchronized with safe settings","timestamp":"2025-04-03T11:15:37.029Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-04-03T11:15:37.033Z"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-04-03T11:18:48.668Z"}
{"level":"info","message":"Database synchronized with safe settings","timestamp":"2025-04-03T11:18:48.726Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-04-03T11:18:48.730Z"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-04-03T11:21:54.763Z"}
{"level":"info","message":"Database synchronized with safe settings","timestamp":"2025-04-03T11:21:54.839Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-04-03T11:21:54.844Z"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-04-03T11:22:05.463Z"}
{"level":"info","message":"Database synchronized with safe settings","timestamp":"2025-04-03T11:22:05.517Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-04-03T11:22:05.521Z"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-04-03T11:22:38.430Z"}
{"level":"info","message":"Database synchronized with safe settings","timestamp":"2025-04-03T11:22:38.507Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-04-03T11:22:38.514Z"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-04-03T11:23:38.059Z"}
{"level":"info","message":"Database synchronized with safe settings","timestamp":"2025-04-03T11:23:38.092Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-04-03T11:23:38.094Z"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-04-03T11:32:28.659Z"}
{"level":"info","message":"Database synchronized with safe settings","timestamp":"2025-04-03T11:32:28.732Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-04-03T11:32:28.737Z"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-04-03T11:37:25.489Z"}
{"level":"info","message":"Database synchronized with safe settings","timestamp":"2025-04-03T11:37:25.578Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-04-03T11:37:25.583Z"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-04-03T15:47:29.178Z"}
{"level":"info","message":"Database synchronized with safe settings","timestamp":"2025-04-03T15:47:29.282Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-04-03T15:47:29.287Z"}
{"level":"info","message":"Payment processed for booking 23 (undefined) by admin 3","timestamp":"2025-04-03T15:54:32.798Z"}
{"level":"info","message":"Checkout completed for booking 23 (No code) by admin 3","timestamp":"2025-04-03T15:54:36.580Z"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-04-04T06:34:50.595Z"}
{"level":"info","message":"Database synchronized with safe settings","timestamp":"2025-04-04T06:34:50.872Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-04-04T06:34:50.875Z"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-04-04T06:50:06.755Z"}
{"level":"info","message":"Database synchronized with safe settings","timestamp":"2025-04-04T06:50:06.871Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-04-04T06:50:06.878Z"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-04-04T06:56:56.250Z"}
{"level":"info","message":"Database synchronized with safe settings","timestamp":"2025-04-04T06:56:56.306Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-04-04T06:56:56.310Z"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-04-04T07:01:29.747Z"}
{"level":"info","message":"Database synchronized with safe settings","timestamp":"2025-04-04T07:01:29.787Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-04-04T07:01:29.789Z"}
{"level":"info","message":"Payment processed for booking 26 (undefined) by admin 3","timestamp":"2025-04-04T07:09:34.110Z"}
{"level":"info","message":"Checkout completed for booking 26 (No code) by admin 3","timestamp":"2025-04-04T07:09:37.160Z"}
{"level":"info","message":"Database connection has been established successfully.","timestamp":"2025-04-04T08:29:33.766Z"}
{"level":"info","message":"Database synchronized with safe settings","timestamp":"2025-04-04T08:29:33.822Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-04-04T08:29:33.824Z"}
{"level":"info","message":"Payment processed for booking 27 (undefined) by admin 3","timestamp":"2025-04-04T08:35:26.273Z"}
{"level":"info","message":"Checkout completed for booking 27 (No code) by admin 3","timestamp":"2025-04-04T08:35:29.023Z"}
